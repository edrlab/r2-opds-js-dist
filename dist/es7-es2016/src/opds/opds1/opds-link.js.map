{"version":3,"file":"opds-link.js","sourceRoot":"","sources":["../../../../../src/opds/opds1/opds-link.ts"],"names":[],"mappings":";;;;AAOA,qEAA6F;AAE7F,2DAAmD;AACnD,+CAAuC;AACvC,6CAAqC;AACrC,yEAAiE;AAgB1D,IAAM,IAAI,GAAV,MAAM,IAAI;IAwDN,MAAM,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC;IAC5B,CAAC;IAEM,MAAM,CAAC,GAAW;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;CACJ,CAAA;AA1DG;IAAC,IAAA,gCAAgB,EAAC,mBAAmB,CAAC;;uCACZ;AAE1B;IAAC,IAAA,gCAAgB,EAAC,0BAA0B,CAAC;;mDACP;AAEtC;IAAC,IAAA,gCAAgB,EAAC,0BAA0B,CAAC;IAC5C,IAAA,2BAAW,EAAC,8CAAmB,CAAC;;sDACuB;AAIxD;IAAC,IAAA,gCAAgB,EAAC,mBAAmB,CAAC;sCACZ,gCAAY;8CAAC;AAIvC;IAAC,IAAA,gCAAgB,EAAC,aAAa,CAAC;sCACZ,oBAAM;wCAAC;AAI3B;IAAC,IAAA,gCAAgB,EAAC,YAAY,CAAC;sCACZ,kBAAK;uCAAC;AAMzB;IAAC,IAAA,gCAAgB,EAAC,8BAA8B,CAAC;;iDACb;AAEpC;IAAC,IAAA,gCAAgB,EAAC,OAAO,CAAC;;kCACL;AAGrB;IAAC,IAAA,gCAAgB,EAAC,YAAY,CAAC;;sCACN;AAEzB;IAAC,IAAA,gCAAgB,EAAC,kBAAkB,CAAC;;wCACV;AAE3B;IAAC,IAAA,gCAAgB,EAAC,OAAO,CAAC;;kCACL;AAErB;IAAC,IAAA,gCAAgB,EAAC,QAAQ,CAAC;;mCACL;AAEtB;IAAC,IAAA,gCAAgB,EAAC,MAAM,CAAC;;iCACL;AAtDX,IAAI;IAdhB,IAAA,yBAAS,EAAC;QACP,GAAG,EAAE,4BAA4B;QACjC,IAAI,EAAE,6BAA6B;QACnC,QAAQ,EAAE,4BAA4B;QACtC,OAAO,EAAE,2BAA2B;QACpC,GAAG,EAAE,iCAAiC;QACtC,GAAG,EAAE,0BAA0B;QAC/B,IAAI,EAAE,mCAAmC;QACzC,UAAU,EAAE,sCAAsC;QAClD,SAAS,EAAE,sDAAsD;QACjE,MAAM,EAAE,mBAAmB;QAC3B,GAAG,EAAE,wCAAwC;QAC7C,GAAG,EAAE,2CAA2C;KACnD,CAAC;GACW,IAAI,CA+DhB;AA/DY,oBAAI","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { XmlItemType, XmlObject, XmlXPathSelector } from \"@r2-utils-js/_utils/xml-js-mapper\";\n\nimport { Availability } from \"./opds-availability\";\nimport { Copies } from \"./opds-copies\";\nimport { Holds } from \"./opds-holds\";\nimport { IndirectAcquisition } from \"./opds-indirectAcquisition\";\n\n@XmlObject({\n    app: \"http://www.w3.org/2007/app\",\n    atom: \"http://www.w3.org/2005/Atom\",\n    bibframe: \"http://bibframe.org/vocab/\",\n    dcterms: \"http://purl.org/dc/terms/\",\n    lcp: \"http://readium.org/lcp-specs/ns\",\n    odl: \"http://opds-spec.org/odl\",\n    opds: \"http://opds-spec.org/2010/catalog\",\n    opensearch: \"http://a9.com/-/spec/opensearch/1.1/\",\n    relevance: \"http://a9.com/-/opensearch/extensions/relevance/1.0/\",\n    schema: \"http://schema.org\",\n    thr: \"http://purl.org/syndication/thread/1.0\",\n    xsi: \"http://www.w3.org/2001/XMLSchema-instance\",\n})\nexport class Link {\n\n    // XPATH ROOT: /atom:feed/atom:link\n    // XPATH ROOT: /atom:feed/atom:entry/atom:link\n\n    @XmlXPathSelector(\"opds:price/text()\")\n    public OpdsPrice!: number;\n\n    @XmlXPathSelector(\"opds:price/@currencycode\")\n    public OpdsPriceCurrencyCode!: string;\n\n    @XmlXPathSelector(\"opds:indirectAcquisition\")\n    @XmlItemType(IndirectAcquisition)\n    public OpdsIndirectAcquisitions!: IndirectAcquisition[];\n\n    // https://wiki.lyrasis.org/display/SIM/OPDS+For+Libraries#OPDSForLibraries-availability\n    // @XmlItemType(Availability)\n    @XmlXPathSelector(\"opds:availability\")\n    public OpdsAvailability!: Availability;\n\n    // https://wiki.lyrasis.org/display/SIM/OPDS+For+Libraries#OPDSForLibraries-copies\n    // @XmlItemType(Copies)\n    @XmlXPathSelector(\"opds:copies\")\n    public OpdsCopies!: Copies;\n\n    // https://wiki.lyrasis.org/display/SIM/OPDS+For+Libraries#OPDSForLibraries-holds\n    // @XmlItemType(Holds)\n    @XmlXPathSelector(\"opds:holds\")\n    public OpdsHolds!: Holds;\n\n    // tslint:disable-next-line: max-line-length\n    // https://readium.org/lcp-specs/notes/lcp-key-retrieval.html#including-a-hashed-passphrase-in-an-opds-1-catalog\n    // tslint:disable-next-line: max-line-length\n    // https://github.com/readium/lcp-specs/blob/master/notes/lcp-key-retrieval.md#including-a-hashed-passphrase-in-an-opds-1-catalog\n    @XmlXPathSelector(\"lcp:hashed_passphrase/text()\")\n    public LcpHashedPassphrase!: string;\n\n    @XmlXPathSelector(\"@type\")\n    public Type!: string;\n\n    // @XmlXPathSelector(\"@*[local-name()='count' and namespace-uri()='http://purl.org/syndication/thread/1.0']\")\n    @XmlXPathSelector(\"@thr:count\")\n    public ThrCount!: number;\n\n    @XmlXPathSelector(\"@opds:facetGroup\")\n    public FacetGroup!: string;\n\n    @XmlXPathSelector(\"@href\")\n    public Href!: string;\n\n    @XmlXPathSelector(\"@title\")\n    public Title!: string;\n\n    @XmlXPathSelector(\"@rel\")\n    public Rel!: string;\n\n    public HasRel(rel: string): boolean {\n        return this.Rel === rel;\n    }\n\n    public SetRel(rel: string) {\n        this.Rel = rel;\n    }\n}\n"]}
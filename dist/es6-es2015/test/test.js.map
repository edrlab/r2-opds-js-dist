{"version":3,"file":"test.js","sourceRoot":"","sources":["../../../test/test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as https from \"https\";\nimport { URL } from \"url\";\n\nimport { sortObject, traverseJsonObjects } from \"@r2-utils-js/_utils/JsonUtils\";\nimport { ExecutionContext } from \"ava\";\nimport test from \"ava\";\nimport * as debug_ from \"debug\";\nimport * as jsonDiff from \"json-diff\";\nimport { JSON as TAJSON } from \"ta-json-x\";\n\nimport {\n    initGlobalConverters_GENERIC,\n    initGlobalConverters_OPDS,\n} from \"../src/opds/init-globals\";\nimport { OPDSFeed } from \"../src/opds/opds2/opds2\";\nimport { OPDSPublication } from \"../src/opds/opds2/opds2-publication\";\n\ninitGlobalConverters_OPDS();\ninitGlobalConverters_GENERIC();\n\nconst debug = debug_(\"r2:opds#test\");\n\n// ==========================\n\nasync function fn() {\n    return Promise.resolve(\"foo\");\n}\ntest(\"dummy async test\", async (t) => {\n    debug(\"test ASYNC\");\n    t.is(await fn(), \"foo\");\n});\n\ninterface OPDSFeedAndPubUrls {\n    feeds: Set<string>;\n    pubs: Set<string>;\n}\nasync function opds2Test(url: string): Promise<OPDSFeedAndPubUrls> {\n\n    return new Promise<OPDSFeedAndPubUrls>((resolve, reject) => {\n\n        // debug(\"------------------------\");\n        debug(url);\n        // debug(\"------------------------\");\n\n        https.get(url, (response) => {\n            let str: string | undefined;\n            let buffs: Buffer[] | undefined;\n\n            if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                debug(`${url} ==> ${response.statusCode} (skipped)`);\n                const empty: OPDSFeedAndPubUrls = {\n                    feeds: new Set<string>([]),\n                    pubs:  new Set<string>([]),\n                };\n                resolve(empty);\n                return;\n            }\n\n            response.on(\"data\", (chunk) => {\n                if (typeof chunk === \"string\") {\n                    if (!str) {\n                        str = \"\";\n                    }\n                    str += chunk;\n                } else {\n                    if (!buffs) {\n                        buffs = [];\n                    }\n                    buffs.push(chunk);\n                }\n            });\n\n            response.on(\"end\", () => {\n                let src: string | undefined;\n                if (str) {\n                    src = str;\n                } else if (buffs) {\n                    src = Buffer.concat(buffs).toString(\"utf8\");\n                }\n                if (!src) {\n                    reject(`Problem loading: ${url}`);\n                    return;\n                }\n\n                const harmonizeDate = (obj: any) => {\n                    [\"updated\", \"published\", \"since\", \"until\", \"modified\"].forEach((term) => {\n                        if (obj[term]) {\n                            if (typeof obj[term] === \"string\" || typeof obj[term] === \"number\") {\n                                const date = new Date(obj[term] as string);\n                                const time = date.getTime();\n                                if (!isNaN(time)) {\n                                    const tmp = date.toISOString();\n                                    if (obj[term] !== tmp) {\n                                        // console.log(\"=== \" + term + \": \" + obj[term] + \" => \" + tmp);\n                                        obj[term] = tmp;\n                                    }\n                                } else {\n                                    console.log(\"TIME? \" + time);\n                                }\n                            }\n                        }\n                    });\n                };\n                const harmonizeName = (obj: any) => {\n                    // tslint:disable-next-line:max-line-length\n                    [\"subject\", \"collection\", \"series\", \"author\", \"translator\", \"editor\", \"artist\", \"illustrator\", \"letterer\", \"penciler\", \"colorist\", \"inker\", \"narrator\", \"contributor\", \"publisher\", \"imprint\"].forEach((term) => {\n                        if (obj[term]) {\n                            const isArray = obj[term] instanceof Array;\n                            const arr = isArray ? obj[term] : [obj[term]];\n                            // tslint:disable-next-line:prefer-for-of\n                            for (let i = 0; i < arr.length; i++) {\n                                if (typeof arr[i] === \"string\") {\n                                    // console.log(\"string to name object => \" + term + \": \" + arr[i]);\n                                    if (isArray) {\n                                        obj[term][i] = { name: obj[term][i] };\n                                    } else {\n                                        obj[term] = { name: obj[term] };\n                                    }\n                                } else if (typeof arr[i] === \"object\") {\n                                    if (arr[i].name) {\n                                        if (typeof arr[i].name === \"string\") {\n                                            // // console.log(\"name string in object to lang map => \" +\n                                            // // term + \": \" + arr[i].name);\n                                            // if (isArray) {\n                                            //     obj[term][i].name = { _: obj[term][i].name };\n                                            // } else {\n                                            //     obj[term].name = { _: obj[term].name };\n                                            // }\n                                            // do nothing\n                                        } else if (typeof arr[i].name === \"object\") { // IStringMap\n                                            // do nothing\n                                        }\n                                    }\n                                }\n                            }\n                            if (!isArray) {\n                                obj[term] = [obj[term]];\n                            }\n                        }\n                    });\n                };\n                const harmonizeArrays = (obj: any) => {\n                    // tslint:disable-next-line:max-line-length\n                    [\"role\", \"@context\", \"rel\", \"language\"].forEach((term) => {\n                        if (obj[term]) {\n                            const isArray = obj[term] instanceof Array;\n                            if (!isArray) {\n                                obj[term] = [obj[term]];\n                            }\n                        }\n                    });\n                };\n                // const harmonizeFieldnames = (obj: any) => {\n                //     if (obj.belongs_to) {\n                //         obj.belongsTo = obj.belongs_to;\n                //         obj.belongs_to = undefined;\n                //         delete obj.belongs_to;\n                //     }\n                //     if (obj.sort_as) {\n                //         obj.sortAs = obj.sort_as;\n                //         obj.sort_as = undefined;\n                //         delete obj.sort_as;\n                //     }\n                //     if (obj.direction) {\n                //         obj.readingProgression = obj.direction;\n                //         obj.direction = undefined;\n                //         delete obj.direction;\n                //     }\n                //     if (obj.spine) {\n                //         obj.readingOrder = obj.spine;\n                //         obj.spine = undefined;\n                //         delete obj.spine;\n                //     }\n                // };\n\n                let json1 = JSON.parse(src);\n                // traverseJsonObjects(json1,\n                //     (obj) => {\n                //         harmonizeFieldnames(obj);\n                //     });\n                // debug(json1);\n                // debug(\"------------------------\");\n                // debug(\"------------------------\");\n                const isPublication = !json1.publications && !json1.navigation && !json1.groups && json1.metadata;\n                const opds2Feed: OPDSPublication | OPDSFeed = isPublication ?\n                    TAJSON.deserialize<OPDSPublication>(json1, OPDSPublication) : // \"application/opds-publication+json\"\n                    TAJSON.deserialize<OPDSFeed>(json1, OPDSFeed); // \"application/opds+json\"\n                // debug(opds2Feed);\n                // debug(\"------------------------\");\n                // debug(\"------------------------\");\n                let json2 = TAJSON.serialize(opds2Feed);\n                // debug(json2);\n                // debug(\"------------------------\");\n                // debug(\"------------------------\");\n\n                // console.log(\"=== HARMONIZING JSON1 ...\");\n                traverseJsonObjects(json1,\n                    (obj) => {\n                        harmonizeDate(obj);\n                    });\n                traverseJsonObjects(json1,\n                    (obj) => {\n                        harmonizeName(obj);\n                    });\n                traverseJsonObjects(json1,\n                    (obj) => {\n                        harmonizeArrays(obj);\n                    });\n                // console.log(\"=== HARMONIZING JSON2 ...\");\n                traverseJsonObjects(json2,\n                    (obj) => {\n                        harmonizeDate(obj);\n                    });\n                traverseJsonObjects(json2,\n                    (obj) => {\n                        harmonizeName(obj);\n                    });\n                traverseJsonObjects(json2,\n                    (obj) => {\n                        harmonizeArrays(obj);\n                    });\n\n                json1 = sortObject(json1);\n                json2 = sortObject(json2);\n\n                const str1 = JSON.stringify(json1, null, 2);\n                const str2 = JSON.stringify(json2, null, 2);\n\n                if (str1 !== str2) {\n                    process.stdout.write(\"###########################\\n\");\n                    process.stdout.write(\"###########################\\n\");\n                    process.stdout.write(\"#### JSON DIFF\\n\");\n                    process.stdout.write(jsonDiff.diffString(json1, json2) + \"\\n\");\n                    // process.stdout.write(\"###########################\\n\");\n                    // process.stdout.write(\"###########################\\n\");\n                    // process.stdout.write(jsonDiff.diffString(opds2Json, json) + \"\\n\");\n                    process.stdout.write(\"###########################\\n\");\n                    process.stdout.write(\"###########################\\n\");\n                    // console.log(jsonDiff.diff(json, opds2Json));\n\n                    reject(\"JSON DIFF! :(\");\n                    return;\n                }\n\n                const thisUrl = new URL(url);\n                const thisUrlStr = thisUrl.toString();\n                const feedUrls = new Set<string>();\n                const pubUrls = new Set<string>();\n                traverseJsonObjects(json1,\n                    (obj) => {\n                        const isFeed = obj.type === \"application/opds+json\";\n                        const isPub = obj.type === \"application/opds-publication+json\";\n                        if (obj.href && (isFeed || isPub)) {\n\n                            const u = new URL(obj.href, thisUrl);\n                            const uStr = u.toString();\n                            if (uStr !== thisUrlStr) {\n                                if (isFeed) {\n                                    feedUrls.add(uStr);\n                                } else if (isPub) {\n                                    pubUrls.add(uStr);\n                                }\n\n                                // console.log(\"URL: \" + obj.href + \" => \" + uStr);\n                            } else {\n                                // console.log(\"URL: \" + obj.href + \" (skipped)\");\n                            }\n                        }\n                    });\n\n                const set: OPDSFeedAndPubUrls = {\n                    feeds: feedUrls,\n                    pubs:  pubUrls,\n                };\n                resolve(set);\n            });\n        }).on(\"error\", (err) => {\n            reject(err);\n        });\n    });\n}\nconst MAX_TESTS = process.env.MAX_TESTS || 10;\nasync function testUrl(t: ExecutionContext, url: string, alreadyDone: Set<string>): Promise<boolean> {\n    if (alreadyDone.size >= MAX_TESTS) {\n        return true;\n    }\n\n    alreadyDone.add(url);\n\n    let urls: OPDSFeedAndPubUrls | undefined;\n    try {\n        urls = await opds2Test(url);\n    } catch (err) {\n        debug(err);\n        // early termination\n        return false;\n    }\n\n    if (urls) {\n\n        const urlsTodoPubs: string[] = [];\n        urls.pubs.forEach((u) => {\n            if (!alreadyDone.has(u)) {\n                urlsTodoPubs.push(u);\n            }\n        });\n\n        const urlsTodoFeeds: string[] = [];\n        urls.feeds.forEach((u) => {\n            if (!alreadyDone.has(u)) {\n                urlsTodoFeeds.push(u);\n            }\n        });\n\n        for (const href of urlsTodoPubs) {\n            const okay = await testUrl(t, href, alreadyDone);\n            if (!okay) {\n                return false;\n            }\n        }\n\n        for (const href of urlsTodoFeeds) {\n            const okay = await testUrl(t, href, alreadyDone);\n            if (!okay) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nasync function delay(okay: boolean): Promise<boolean> {\n    return new Promise((resolve, _reject) => {\n        setTimeout(() => {\n            resolve(okay);\n        }, 1000);\n    });\n}\n\nasync function runUrlTest(t: ExecutionContext, url: string) {\n    const done = new Set<string>([]);\n    try {\n        const okay = await testUrl(t, url, done);\n        debug(done);\n        debug(done.size);\n\n        t.true(await delay(okay));\n        return;\n    } catch (err) {\n        debug(err);\n    }\n    t.true(await delay(false));\n}\n\ntest(\"OPDS2 HTTP (de)serialize roundtrip (recursive) 1\", async (t) => {\n    const url = \"https://test.opds.io/2.0/home.json\";\n    // https://test.opds.io/2.0/navigation.json\n    // https://test.opds.io/2.0/publications.json\n    // https://test.opds.io/2.0/404.json\n    await runUrlTest(t, url);\n});\n\ntest(\"OPDS2 HTTP (de)serialize roundtrip (recursive) 2\", async (t) => {\n    const url = \"https://catalog.feedbooks.com/catalog/public_domain.json\";\n    // https://catalog.feedbooks.com/catalog/index.json\n    // https://catalog.feedbooks.com/book/1421.json\n    await runUrlTest(t, url);\n});\n"]}
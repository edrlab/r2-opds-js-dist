{"version":3,"file":"test-JSON-Title.js","sourceRoot":"","sources":["../../../test/test-JSON-Title.ts"],"names":[],"mappings":"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","sourcesContent":["import test from \"ava\";\n\nimport { JsonMap, TaJsonDeserialize, TaJsonSerialize } from \"@r2-lcp-js/serializable\";\nimport { Metadata } from \"@r2-shared-js/models/metadata\";\nimport { IStringMap } from \"@r2-shared-js/models/metadata-multilang\";\n\nimport { initGlobalConverters_GENERIC, initGlobalConverters_OPDS } from \"../src/opds/init-globals\";\nimport { checkType_Object, checkType_String, inspect, logJSON } from \"./helpers\";\n\ninitGlobalConverters_OPDS();\ninitGlobalConverters_GENERIC();\n\n// ==========================\n\nconst titleStr1 = \"str1\";\nconst titleStr2 = \"str2\";\nconst titleLang1 = \"lang1\";\nconst titleLang2 = \"lang2\";\nconst titleLangStr1: IStringMap = {};\ntitleLangStr1[titleLang1] = titleStr1;\ntitleLangStr1[titleLang2] = titleStr2;\nconst titleLangStr2: IStringMap = {};\ntitleLangStr2[titleLang1] = titleStr2;\ntitleLangStr2[titleLang2] = titleStr1;\n\n// ==========================\n\ntest(\"JSON SERIALIZE: Metadata.Title => string\", (t) => {\n    const md = new Metadata();\n    md.Title = titleStr1;\n    inspect(md);\n\n    const json = TaJsonSerialize(md);\n    logJSON(json);\n\n    checkType_String(t, json.title);\n    t.is(json.title, titleStr1);\n});\n\ntest(\"JSON SERIALIZE: Metadata.Title => string-lang\", (t) => {\n    const md = new Metadata();\n    md.Title = titleLangStr1;\n    inspect(md);\n\n    const json = TaJsonSerialize(md);\n    logJSON(json);\n\n    checkType_Object(t, json.title);\n\n    const title = json.title as JsonMap;\n    checkType_String(t, title[titleLang1]);\n    t.is(title[titleLang1], titleStr1);\n\n    checkType_String(t, title[titleLang2]);\n    t.is(title[titleLang2], titleStr2);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Title => string\", (t) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {};\n    json.title = titleStr1;\n    logJSON(json);\n\n    const md: Metadata = TaJsonDeserialize<Metadata>(json, Metadata);\n    inspect(md);\n\n    checkType_String(t, md.Title);\n    t.is(md.Title, titleStr1);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Title => string-lang\", (t) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {};\n    json.title = titleLangStr1;\n    logJSON(json);\n\n    const md: Metadata = TaJsonDeserialize<Metadata>(json, Metadata);\n    inspect(md);\n\n    checkType_Object(t, md.Title);\n\n    checkType_String(t, (md.Title as IStringMap)[titleLang1]);\n    t.is((md.Title as IStringMap)[titleLang1], titleStr1);\n\n    checkType_String(t, (md.Title as IStringMap)[titleLang2]);\n    t.is((md.Title as IStringMap)[titleLang2], titleStr2);\n});\n"]}
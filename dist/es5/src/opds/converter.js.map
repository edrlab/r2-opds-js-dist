{"version":3,"file":"converter.js","sourceRoot":"","sources":["../../../../src/opds/converter.ts"],"names":[],"mappings":"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","sourcesContent":["import { OPDS } from \"./opds1/opds\";\nimport { OPDSFeed } from \"./opds2/opds2\";\nimport { OPDSBelongsTo } from \"./opds2/opds2-belongsTo\";\nimport { OPDSCollection } from \"./opds2/opds2-collection\";\nimport { OPDSContributor } from \"./opds2/opds2-contributor\";\nimport { OPDSIndirectAcquisition } from \"./opds2/opds2-indirectAcquisition\";\nimport { OPDSLink } from \"./opds2/opds2-link\";\nimport { OPDSMetadata } from \"./opds2/opds2-metadata\";\nimport { OPDSPrice } from \"./opds2/opds2-price\";\nimport { OPDSProperties } from \"./opds2/opds2-properties\";\nimport { OPDSPublication } from \"./opds2/opds2-publication\";\nimport { OPDSPublicationMetadata } from \"./opds2/opds2-publicationMetadata\";\nimport { OPDSSubject } from \"./opds2/opds2-subject\";\n\n// https://github.com/opds-community/opds-revision\nexport function convertOpds1ToOpds2(feed: OPDS): OPDSFeed {\n    const opds2feed = new OPDSFeed();\n\n    opds2feed.Metadata = new OPDSMetadata();\n    opds2feed.Metadata.Title = feed.Title;\n    opds2feed.Metadata.Modified = feed.Updated;\n    if (feed.OpensearchTotalResults) {\n        opds2feed.Metadata.NumberOfItems = feed.OpensearchTotalResults;\n    }\n    if (feed.OpensearchItemsPerPage) {\n        opds2feed.Metadata.ItemsPerPage = feed.OpensearchItemsPerPage;\n    }\n    if (feed.Authors) {\n        feed.Authors.forEach((aut) => {\n\n            const cont = new OPDSContributor();\n            cont.Name = aut.Name;\n            cont.Identifier = aut.Uri;\n            if (!opds2feed.Metadata.Author) {\n                opds2feed.Metadata.Author = [];\n            }\n            opds2feed.Metadata.Author.push(cont);\n        });\n    }\n    if (feed.Entries) {\n        feed.Entries.forEach((entry) => {\n            let isAnNavigation = true;\n            const collLink = new OPDSLink();\n\n            if (entry.Links) {\n                entry.Links.forEach((l) => {\n\n                    // if (l.HasRel(\"http://opds-spec.org/acquisition\")\n                    //     || l.HasRel(\"http://opds-spec.org/acquisition/buy\")) {\n                    if (l.Rel && l.Rel.indexOf(\"http://opds-spec.org/acquisition\") === 0) {\n                        isAnNavigation = false;\n                    }\n                    if (l.HasRel(\"collection\") || l.HasRel(\"http://opds-spec.org/group\")) {\n                        collLink.AddRel(\"collection\");\n                        collLink.Href = l.Href;\n                        collLink.Title = l.Title;\n                    }\n                });\n            }\n\n            if (!isAnNavigation) {\n                const p = new OPDSPublication();\n                p.Metadata = new OPDSPublicationMetadata();\n                p.Metadata.Title = entry.Title;\n                if (entry.DcIdentifier) {\n                    p.Metadata.Identifier = entry.DcIdentifier;\n                } else {\n                    p.Metadata.Identifier = entry.Id;\n                }\n                p.Metadata.Language = [entry.DcLanguage];\n                p.Metadata.Modified = entry.Updated;\n                p.Metadata.PublicationDate = entry.Published;\n                p.Metadata.Rights = entry.DcRights;\n                if (entry.Series) {\n                    entry.Series.forEach((s) => {\n                        const coll = new OPDSCollection();\n                        coll.Name = s.Name;\n                        coll.Position = s.Position;\n                        const link = new OPDSLink();\n                        link.Href = s.Url;\n                        coll.Links = [];\n                        coll.Links.push(link);\n\n                        if (!p.Metadata.BelongsTo) {\n                            p.Metadata.BelongsTo = new OPDSBelongsTo();\n                        }\n                        if (!p.Metadata.BelongsTo.Series) {\n                            p.Metadata.BelongsTo.Series = [];\n                        }\n                        p.Metadata.BelongsTo.Series.push(coll);\n                    });\n                }\n                if (entry.DcPublisher) {\n                    const c = new OPDSContributor();\n                    c.Name = entry.DcPublisher;\n                    if (!p.Metadata.Publisher) {\n                        p.Metadata.Publisher = [];\n                    }\n                    p.Metadata.Publisher.push(c);\n                }\n\n                if (entry.Categories) {\n                    entry.Categories.forEach((cat) => {\n                        const subj = new OPDSSubject();\n                        subj.Code = cat.Term;\n                        subj.Name = cat.Label;\n                        subj.Scheme = cat.Scheme;\n                        if (!p.Metadata.Subject) {\n                            p.Metadata.Subject = [];\n                        }\n                        p.Metadata.Subject.push(subj);\n                    });\n                }\n                if (entry.Authors) {\n                    entry.Authors.forEach((aut) => {\n\n                        const cont = new OPDSContributor();\n                        cont.Name = aut.Name;\n                        cont.Identifier = aut.Uri;\n                        if (!p.Metadata.Author) {\n                            p.Metadata.Author = [];\n                        }\n                        p.Metadata.Author.push(cont);\n                    });\n                }\n\n                if (entry.Content) {\n                    p.Metadata.Description = entry.Content;\n                } else if (entry.Summary) {\n                    p.Metadata.Description = entry.Summary;\n                }\n\n                if (entry.Links) {\n                    entry.Links.forEach((link) => {\n                        const l = new OPDSLink();\n                        l.Href = link.Href;\n                        l.TypeLink = link.Type;\n                        l.AddRel(link.Rel);\n                        l.Title = link.Title;\n\n                        if (link.OpdsIndirectAcquisitions && link.OpdsIndirectAcquisitions.length) {\n                            if (!l.Properties) {\n                                l.Properties = new OPDSProperties();\n                            }\n\n                            link.OpdsIndirectAcquisitions.forEach((ia) => {\n                                const ind = new OPDSIndirectAcquisition();\n                                ind.TypeAcquisition = ia.OpdsIndirectAcquisitionType;\n                                if (ia.OpdsIndirectAcquisitions && ia.OpdsIndirectAcquisitions.length) {\n                                    ia.OpdsIndirectAcquisitions.forEach((iac) => {\n\n                                        const cia = new OPDSIndirectAcquisition();\n                                        cia.TypeAcquisition = iac.OpdsIndirectAcquisitionType;\n                                        if (!ind.Children) {\n                                            ind.Children = [];\n                                        }\n                                        ind.Children.push(cia);\n                                    });\n                                }\n                                if (!l.Properties.IndirectAcquisitions) {\n                                    l.Properties.IndirectAcquisitions = [];\n                                }\n                                l.Properties.IndirectAcquisitions.push(ind);\n                            });\n                        }\n\n                        if (link.OpdsPrice && link.OpdsPriceCurrencyCode) {\n                            if (!l.Properties) {\n                                l.Properties = new OPDSProperties();\n                            }\n                            l.Properties.Price = new OPDSPrice();\n                            l.Properties.Price.Currency = link.OpdsPriceCurrencyCode;\n                            l.Properties.Price.Value = link.OpdsPrice;\n                        }\n\n                        if (link.HasRel(\"collection\") || link.HasRel(\"http://opds-spec.org/group\")) {\n                            // NOOP\n                        } else if (link.HasRel(\"http://opds-spec.org/image\") ||\n                            link.HasRel(\"http://opds-spec.org/image/thumbnail\")) {\n                            if (!p.Images) {\n                                p.Images = [];\n                            }\n                            p.Images.push(l);\n                        } else {\n                            if (!p.Links) {\n                                p.Links = [];\n                            }\n                            p.Links.push(l);\n                        }\n                    });\n                }\n\n                if (collLink.Href) {\n                    opds2feed.AddPublicationInGroup(p, collLink);\n                } else {\n                    if (!opds2feed.Publications) {\n                        opds2feed.Publications = [];\n                    }\n                    opds2feed.Publications.push(p);\n                }\n            } else {\n                const linkNav = new OPDSLink();\n                linkNav.Title = entry.Title;\n                if (entry.Links && entry.Links[0]) {\n                    linkNav.AddRel(entry.Links[0].Rel);\n                    linkNav.TypeLink = entry.Links[0].Type;\n                    linkNav.Href = entry.Links[0].Href;\n                }\n\n                if (collLink.Href) {\n                    opds2feed.AddNavigationInGroup(linkNav, collLink);\n                } else {\n                    if (!opds2feed.Navigation) {\n                        opds2feed.Navigation = [];\n                    }\n                    opds2feed.Navigation.push(linkNav);\n                }\n            }\n        });\n    }\n\n    if (feed.Links) {\n        feed.Links.forEach((l) => {\n\n            const linkFeed = new OPDSLink();\n            linkFeed.Href = l.Href;\n            linkFeed.AddRel(l.Rel);\n            linkFeed.TypeLink = l.Type;\n            linkFeed.Title = l.Title;\n\n            if (l.HasRel(\"http://opds-spec.org/facet\")) {\n                linkFeed.Properties = new OPDSProperties();\n                linkFeed.Properties.NumberOfItems = l.ThrCount;\n                opds2feed.AddFacet(linkFeed, l.FacetGroup);\n            } else {\n                if (!opds2feed.Links) {\n                    opds2feed.Links = [];\n                }\n                opds2feed.Links.push(linkFeed);\n            }\n        });\n    }\n\n    return opds2feed;\n}\n"]}
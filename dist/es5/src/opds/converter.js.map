{"version":3,"file":"converter.js","sourceRoot":"","sources":["../../../../src/opds/converter.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { Metadata } from \"@r2-shared-js/models/metadata\";\nimport { BelongsTo } from \"@r2-shared-js/models/metadata-belongsto\";\nimport { Contributor } from \"@r2-shared-js/models/metadata-contributor\";\nimport { Subject } from \"@r2-shared-js/models/metadata-subject\";\nimport { Link } from \"@r2-shared-js/models/publication-link\";\n\nimport { OPDS } from \"./opds1/opds\";\nimport { Entry } from \"./opds1/opds-entry\";\nimport { OPDSFeed } from \"./opds2/opds2\";\nimport { OPDSIndirectAcquisition } from \"./opds2/opds2-indirectAcquisition\";\nimport { OPDSLink } from \"./opds2/opds2-link\";\nimport { OPDSMetadata } from \"./opds2/opds2-metadata\";\nimport { OPDSPrice } from \"./opds2/opds2-price\";\nimport { OPDSProperties } from \"./opds2/opds2-properties\";\nimport { OPDSPublication } from \"./opds2/opds2-publication\";\n\n// import { OPDSCollection } from \"./opds2/opds2-collection\";\n// import { OPDSContributor } from \"./opds2/opds2-contributor\";\n// import { OPDSPublicationMetadata } from \"./opds2/opds2-publicationMetadata\";\n\nexport function convertOpds1ToOpds2_EntryToPublication(entry: Entry): OPDSPublication {\n\n    const p = new OPDSPublication();\n    p.Metadata = new Metadata();\n    p.Metadata.Title = entry.Title;\n    if (entry.DcIdentifier) {\n        p.Metadata.Identifier = entry.DcIdentifier;\n    } else {\n        p.Metadata.Identifier = entry.Id;\n    }\n    if (entry.DcLanguage) {\n        p.Metadata.Language = [entry.DcLanguage];\n    }\n    p.Metadata.Modified = entry.Updated;\n    p.Metadata.PublicationDate = entry.Published;\n    p.Metadata.Rights = entry.DcRights;\n    if (entry.Series) {\n        entry.Series.forEach((s) => {\n            const coll = new Contributor();\n            coll.Name = s.Name;\n            coll.Position = s.Position;\n            const link = new Link();\n            link.Href = s.Url;\n            coll.Links = [];\n            coll.Links.push(link);\n\n            if (!p.Metadata.BelongsTo) {\n                p.Metadata.BelongsTo = new BelongsTo();\n            }\n            if (!p.Metadata.BelongsTo.Series) {\n                p.Metadata.BelongsTo.Series = [];\n            }\n            p.Metadata.BelongsTo.Series.push(coll);\n        });\n    }\n    if (entry.DcPublisher) {\n        const c = new Contributor();\n        c.Name = entry.DcPublisher;\n        if (!p.Metadata.Publisher) {\n            p.Metadata.Publisher = [];\n        }\n        p.Metadata.Publisher.push(c);\n    }\n\n    if (entry.Categories) {\n        entry.Categories.forEach((cat) => {\n            const subj = new Subject();\n            subj.Code = cat.Term;\n            subj.Name = cat.Label;\n            subj.Scheme = cat.Scheme;\n            if (!p.Metadata.Subject) {\n                p.Metadata.Subject = [];\n            }\n            p.Metadata.Subject.push(subj);\n        });\n    }\n    if (entry.Authors) {\n        entry.Authors.forEach((aut) => {\n\n            const cont = new Contributor();\n            cont.Name = aut.Name;\n            cont.Identifier = aut.Uri;\n            if (!p.Metadata.Author) {\n                p.Metadata.Author = [];\n            }\n            p.Metadata.Author.push(cont);\n        });\n    }\n\n    if (entry.Summary) {\n        p.Metadata.Description = ((entry.SummaryType === \"text/html\" || entry.SummaryType === \"html\") ?\n            entry.Summary.replace(/ xmlns=\"[^\"]+\"/g, \"\") : // xmlns=\"http://www.w3.org/2005/Atom\"\n            entry.Summary);\n    }\n\n    if (entry.Content) {\n        const txt = ((entry.ContentType === \"text/html\" || entry.ContentType === \"html\") ?\n            entry.Content.replace(/ xmlns=\"[^\"]+\"/g, \"\") : // xmlns=\"http://www.w3.org/2005/Atom\"\n            entry.Content);\n\n        if (p.Metadata.Description) {\n            p.Metadata.Description += \"\\n\\n\";\n            p.Metadata.Description += txt;\n        } else {\n            p.Metadata.Description = txt;\n        }\n    }\n\n    if (entry.Links) {\n        entry.Links.forEach((link) => {\n            const l = new OPDSLink();\n            l.Href = link.Href;\n            l.TypeLink = link.Type;\n            l.AddRel(link.Rel);\n            l.Title = link.Title;\n\n            if (link.OpdsIndirectAcquisitions && link.OpdsIndirectAcquisitions.length) {\n                if (!l.Properties) {\n                    l.Properties = new OPDSProperties();\n                }\n\n                link.OpdsIndirectAcquisitions.forEach((ia) => {\n                    const ind = new OPDSIndirectAcquisition();\n                    ind.TypeAcquisition = ia.OpdsIndirectAcquisitionType;\n                    if (ia.OpdsIndirectAcquisitions && ia.OpdsIndirectAcquisitions.length) {\n                        ia.OpdsIndirectAcquisitions.forEach((iac) => {\n\n                            const cia = new OPDSIndirectAcquisition();\n                            cia.TypeAcquisition = iac.OpdsIndirectAcquisitionType;\n                            if (!ind.Children) {\n                                ind.Children = [];\n                            }\n                            ind.Children.push(cia);\n                        });\n                    }\n                    if (!l.Properties.IndirectAcquisitions) {\n                        l.Properties.IndirectAcquisitions = [];\n                    }\n                    l.Properties.IndirectAcquisitions.push(ind);\n                });\n            }\n\n            if (link.OpdsPrice && link.OpdsPriceCurrencyCode) {\n                if (!l.Properties) {\n                    l.Properties = new OPDSProperties();\n                }\n                l.Properties.Price = new OPDSPrice();\n                l.Properties.Price.Currency = link.OpdsPriceCurrencyCode;\n                l.Properties.Price.Value = link.OpdsPrice;\n            }\n\n            if (link.HasRel(\"collection\") || link.HasRel(\"http://opds-spec.org/group\")) {\n                // NOOP\n            } else if (link.HasRel(\"http://opds-spec.org/image\") ||\n                link.HasRel(\"http://opds-spec.org/image/thumbnail\")) {\n                if (!p.Images) {\n                    p.Images = [];\n                }\n                p.Images.push(l);\n            } else {\n                if (!p.Links) {\n                    p.Links = [];\n                }\n                p.Links.push(l);\n            }\n        });\n    }\n\n    return p;\n}\nexport function convertOpds1ToOpds2_EntryToLink(entry: Entry): OPDSLink {\n\n    const linkNav = new OPDSLink();\n    linkNav.Title = entry.Title;\n\n    if (entry.Summary) {\n        const txt = ((entry.SummaryType === \"text/html\" || entry.SummaryType === \"html\") ?\n            entry.Summary.replace(/ xmlns=\"[^\"]+\"/g, \"\") : // xmlns=\"http://www.w3.org/2005/Atom\"\n            entry.Summary);\n\n        if (linkNav.Title) {\n            linkNav.Title += \"\\n\\n\";\n            linkNav.Title += txt;\n        } else {\n            linkNav.Title = txt;\n        }\n    }\n\n    if (entry.Content) {\n        const txt = ((entry.ContentType === \"text/html\" || entry.ContentType === \"html\") ?\n            entry.Content.replace(/ xmlns=\"[^\"]+\"/g, \"\") : // xmlns=\"http://www.w3.org/2005/Atom\"\n            entry.Content);\n\n        if (linkNav.Title) {\n            linkNav.Title += \"\\n\\n\";\n            linkNav.Title += txt;\n        } else {\n            linkNav.Title = txt;\n        }\n    }\n\n    if (entry.Links && entry.Links[0]) {\n        linkNav.AddRel(entry.Links[0].Rel);\n        linkNav.TypeLink = entry.Links[0].Type;\n        linkNav.Href = entry.Links[0].Href;\n    }\n\n    return linkNav;\n}\n\n// https://github.com/opds-community/opds-revision\nexport function convertOpds1ToOpds2(feed: OPDS): OPDSFeed {\n    const opds2feed = new OPDSFeed();\n\n    opds2feed.Metadata = new OPDSMetadata();\n    opds2feed.Metadata.Title = feed.Title;\n    opds2feed.Metadata.Modified = feed.Updated;\n    if (feed.OpensearchTotalResults) {\n        opds2feed.Metadata.NumberOfItems = feed.OpensearchTotalResults;\n    }\n    if (feed.OpensearchItemsPerPage) {\n        opds2feed.Metadata.ItemsPerPage = feed.OpensearchItemsPerPage;\n    }\n    if (feed.Authors) {\n        feed.Authors.forEach((aut) => {\n\n            const cont = new Contributor();\n            cont.Name = aut.Name;\n            cont.Identifier = aut.Uri;\n            if (!opds2feed.Metadata.Author) {\n                opds2feed.Metadata.Author = [];\n            }\n            opds2feed.Metadata.Author.push(cont);\n        });\n    }\n    if (feed.Entries) {\n        feed.Entries.forEach((entry) => {\n            let isAnNavigation = true;\n            const collLink = new OPDSLink();\n\n            if (entry.Links) {\n                entry.Links.forEach((l) => {\n\n                    // if (l.HasRel(\"http://opds-spec.org/acquisition\")\n                    //     || l.HasRel(\"http://opds-spec.org/acquisition/buy\")) {\n                    if (l.Rel && l.Rel.indexOf(\"http://opds-spec.org/acquisition\") === 0) {\n                        isAnNavigation = false;\n                    }\n                    if (l.HasRel(\"collection\") || l.HasRel(\"http://opds-spec.org/group\")) {\n                        collLink.AddRel(\"collection\");\n                        collLink.Href = l.Href;\n                        collLink.Title = l.Title;\n                    }\n                });\n            }\n\n            if (!isAnNavigation) {\n                const p = convertOpds1ToOpds2_EntryToPublication(entry);\n                if (collLink.Href) {\n                    opds2feed.AddPublicationInGroup(p, collLink);\n                } else {\n                    if (!opds2feed.Publications) {\n                        opds2feed.Publications = [];\n                    }\n                    opds2feed.Publications.push(p);\n                }\n            } else {\n                const linkNav = convertOpds1ToOpds2_EntryToLink(entry);\n                if (collLink.Href) {\n                    opds2feed.AddNavigationInGroup(linkNav, collLink);\n                } else {\n                    if (!opds2feed.Navigation) {\n                        opds2feed.Navigation = [];\n                    }\n                    opds2feed.Navigation.push(linkNav);\n                }\n            }\n        });\n    }\n\n    if (feed.Links) {\n        feed.Links.forEach((l) => {\n\n            const linkFeed = new OPDSLink();\n            linkFeed.Href = l.Href;\n            linkFeed.AddRel(l.Rel);\n            linkFeed.TypeLink = l.Type;\n            linkFeed.Title = l.Title;\n\n            if (l.HasRel(\"http://opds-spec.org/facet\")) {\n                linkFeed.Properties = new OPDSProperties();\n                linkFeed.Properties.NumberOfItems = l.ThrCount;\n                opds2feed.AddFacet(linkFeed, l.FacetGroup);\n            } else {\n                if (!opds2feed.Links) {\n                    opds2feed.Links = [];\n                }\n                opds2feed.Links.push(linkFeed);\n            }\n        });\n    }\n\n    return opds2feed;\n}\n"]}
{"version":3,"file":"ava.js","sourceRoot":"","sources":["../../../test/ava.ts"],"names":[],"mappings":"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","sourcesContent":["// This is a straight port to TypeScript of ./nodes_modules/ava/profile.js\n// with added support for multiple test files (sequential invoke of test runner / worker)\n\nimport * as EventEmitter from \"events\";\n// import * as fs from \"fs\";\nimport * as path from \"path\";\n\nimport * as  arrify from \"arrify\";\nimport * as  babelConfigHelper from \"ava/lib/babel-config\";\nimport * as  CachingPrecompiler from \"ava/lib/caching-precompiler\";\nimport * as  globals from \"ava/lib/globals\";\nimport * as  Promise from \"bluebird\";\n// import * as _eval from \"eval\";\nimport * as  findCacheDir from \"find-cache-dir\";\nimport * as  meow from \"meow\";\nimport * as  pkgConf from \"pkg-conf\";\nimport * as  resolveCwd from \"resolve-cwd\";\nimport * as  uniqueTempDir from \"unique-temp-dir\";\n\n// const workerPath = fs.realpathSync(path.join(__dirname, \"../../../node_modules/ava/lib/test-worker.js\"));\n// console.log(workerPath);\n// const workerCode = fs.readFileSync(workerPath, { encoding: \"utf8\" });\n\nfunction resolveModules(modules: any) {\n    return arrify(modules).map((name: any) => {\n        const modulePath = resolveCwd(name);\n\n        if (modulePath === null) {\n            throw new Error(`Could not resolve required module '${name}'`);\n        }\n\n        return modulePath;\n    });\n}\n\n// Chrome gets upset when the `this` value is non-null for these functions\nglobals.setTimeout = setTimeout.bind(null);\nglobals.clearTimeout = clearTimeout.bind(null);\n\nPromise.longStackTraces();\n\nconst conf = pkgConf.sync(\"ava\", {\n    defaults: {\n        babel: \"default\",\n    },\n});\n\n// Define a minimal set of options from the main CLI\nconst cli = meow(`\nUsage\n    $ iron-node node_modules/ava/profile.js <test-files>\nOptions\n    --fail-fast   Stop after first test failure\n    --serial, -s  Run tests serially\n`, {\n        alias: {\n            s: \"serial\",\n        },\n        boolean: [\n            \"fail-fast\",\n            \"verbose\",\n            \"serial\",\n            \"tap\",\n        ],\n        default: conf,\n        string: [\n            \"_\",\n        ],\n    });\n\nif (cli.input.length <= 0) {\n    throw new Error(\"Specify test files\");\n}\n// console.log(cli.input);\nconst files = cli.input.map((file: any) => {\n    const f = path.resolve(file);\n    console.log(f);\n    return f;\n});\nconst cacheDir = findCacheDir({\n    files,\n    name: \"ava\",\n}) || uniqueTempDir();\n\nbabelConfigHelper.build(process.cwd(), cacheDir, conf.babel, true)\n    .then((result: any) => {\n        const precompiler = new CachingPrecompiler({\n            babelCacheKeys: result.cacheKeys,\n            getBabelOptions: result.getOptions,\n            path: cacheDir,\n        });\n\n        const precompiled: any = {};\n        files.forEach((file: any) => {\n            precompiled[file] = precompiler.precompileFile(file);\n        });\n\n        const resolvedModules = resolveModules(conf.require);\n\n        let uncaughtExceptionCount = 0;\n\n        let currentIndex = 0;\n        function runTest() {\n            if (currentIndex >= files.length) {\n                return;\n            }\n            const file = files[currentIndex];\n            console.log(`============> ${file}`);\n\n            const opts = {\n                cacheDir,\n                failFast: cli.flags.failFast,\n                file,\n                precompiled,\n                require: resolvedModules,\n                serial: cli.flags.serial,\n                tty: false,\n            };\n\n            uncaughtExceptionCount = 0;\n\n            // `test-worker` will read process.argv[2] for options\n            process.argv[2] = JSON.stringify(opts);\n            process.argv.length = 3;\n\n            if (console.profile) {\n                console.profile(\"AVA test-worker process\");\n            }\n\n            setImmediate(() => {\n                console.log(\"setImmediate ava/lib/test-worker REQUIRE EVAL\");\n                console.log(process.argv[2]);\n\n                // eslint-disable-next-line import/no-unassigned-import\n                require(\"ava/lib/test-worker\");\n\n                // // eslint-disable-next-line import/no-unassigned-import\n                // require(file);\n\n                // _eval(workerCode,\n                //     `${workerPath}`, // _${currentIndex}.js\n                //     {},\n                //     true);\n            });\n        }\n\n        const events = new EventEmitter();\n\n        // Mock the behavior of a parent process\n        (process as any).channel = {\n            // tslint:disable-next-line:no-empty\n            ref() {\n            },\n            // tslint:disable-next-line:no-empty\n            unref() {\n            },\n        };\n        process.send = (data: any) => {\n            if (data && data.ava) {\n                const name = data.name.replace(/^ava-/, \"\");\n\n                if (events.listeners(name).length > 0) {\n                    events.emit(name, data.data);\n                } else {\n                    console.log(\"UNHANDLED AVA EVENT:\", name, data.data);\n                }\n\n                return;\n            }\n\n            console.log(\"NON AVA EVENT:\", data);\n        };\n\n        events.on(\"test\", (data: any) => {\n            console.log(\"TEST:\", data.title, data.error);\n        });\n\n        events.on(\"results\", (data: any) => {\n\n            console.log(\"RESULTS:\", data.stats);\n            currentIndex++;\n            if (currentIndex < files.length) {\n                runTest();\n            } else {\n                console.log(\"ALL TESTS DONE.\");\n\n                if (console.profileEnd) {\n                    console.profileEnd();\n                }\n\n                if (process.exit) {\n                    console.log(\"EXIT ...\");\n                    // eslint-disable-next-line unicorn/no-process-exit\n                    process.exit(data.stats.failCount + uncaughtExceptionCount);\n                }\n            }\n        });\n\n        events.on(\"stats\", () => {\n            setImmediate(() => {\n                (process as any).emit(\"ava-run\", {});\n            });\n        });\n\n        events.on(\"uncaughtException\", (data: any) => {\n            uncaughtExceptionCount++;\n            let stack = data && data.exception && data.exception.stack;\n            stack = stack || data;\n            console.log(stack);\n        });\n\n        runTest();\n    });\n"]}
{"version":3,"file":"test-JSON-Rel.js","sourceRoot":"","sources":["../../../test/test-JSON-Rel.ts"],"names":[],"mappings":"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","sourcesContent":["import test from \"ava\";\n\nimport { JsonArray, JsonMap, TaJsonDeserialize, TaJsonSerialize } from \"@r2-lcp-js/serializable\";\n\nimport { initGlobalConverters_GENERIC, initGlobalConverters_OPDS } from \"../src/opds/init-globals\";\nimport { OPDSLink } from \"../src/opds/opds2/opds2-link\";\nimport { checkType_Array, checkType_String, inspect, logJSON } from \"./helpers\";\n\ninitGlobalConverters_OPDS();\ninitGlobalConverters_GENERIC();\n\n// ==========================\n\nconst relStr1 = \"rel1\";\nconst relStr2 = \"rel2\";\n\n// ==========================\n\ntest(\"JSON SERIALIZE: OPDSLink.Rel => string[]\", (t) => {\n    const link = new OPDSLink();\n    link.AddRel(relStr1);\n    link.AddRel(relStr2);\n    inspect(link);\n\n    const json = TaJsonSerialize(link);\n    logJSON(json);\n\n    checkType_Array(t, json.rel);\n    const arr = json.rel as JsonArray;\n    t.is(arr.length, 2);\n\n    checkType_String(t, arr[0]);\n    t.is(arr[0], relStr1);\n\n    checkType_String(t, arr[1]);\n    t.is(arr[1], relStr2);\n});\n\ntest(\"JSON SERIALIZE: OPDSLink.Rel => string[] (recursive links)\", (t) => {\n    const link = new OPDSLink();\n    link.AddRel(relStr1);\n    link.AddRel(relStr2);\n    const child = new OPDSLink();\n    child.AddRel(relStr2);\n    child.AddRel(relStr1);\n    link.Children = [];\n    link.Children.push(child);\n    inspect(link);\n\n    const json = TaJsonSerialize(link);\n    logJSON(json);\n\n    checkType_Array(t, json.rel);\n    const arr = json.rel as JsonArray;\n    t.is(arr.length, 2);\n\n    checkType_String(t, arr[0]);\n    t.is(arr[0], relStr1);\n\n    checkType_String(t, arr[1]);\n    t.is(arr[1], relStr2);\n\n    checkType_Array(t, json.children);\n    const children = json.children as JsonArray;\n    t.is(children.length, 1);\n\n    const child1 = children[0] as JsonMap;\n    checkType_Array(t, child1.rel);\n    const rels = child1.rel as JsonArray;\n    t.is(rels.length, 2);\n\n    checkType_String(t, rels[0]);\n    t.is(rels[0], relStr2);\n\n    checkType_String(t, rels[1]);\n    t.is(rels[1], relStr1);\n});\n\ntest(\"JSON SERIALIZE: OPDSLink.Rel => string\", (t) => {\n    const link = new OPDSLink();\n    link.AddRel(relStr1);\n    inspect(link);\n\n    const json = TaJsonSerialize(link);\n    logJSON(json);\n\n    checkType_String(t, json.rel);\n    t.is(json.rel, relStr1);\n});\n\ntest(\"JSON SERIALIZE: OPDSLink.Rel => string (recursive links)\", (t) => {\n    const link = new OPDSLink();\n    link.AddRel(relStr1);\n    const child = new OPDSLink();\n    child.AddRel(relStr2);\n    link.Children = [];\n    link.Children.push(child);\n    inspect(link);\n\n    const json = TaJsonSerialize(link);\n    logJSON(json);\n\n    checkType_String(t, json.rel);\n    t.is(json.rel, relStr1);\n\n    checkType_Array(t, json.children);\n    const children = json.children as JsonArray;\n    t.is(children.length, 1);\n\n    const child1 = children[0] as JsonMap;\n    checkType_String(t, child1.rel);\n    t.is(child1.rel, relStr2);\n});\n\ntest(\"JSON DESERIALIZE: OPDSLink.Rel => string[]\", (t) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {};\n    json.rel = [relStr1, relStr2];\n    logJSON(json);\n\n    const link: OPDSLink = TaJsonDeserialize<OPDSLink>(json, OPDSLink);\n    inspect(link);\n\n    checkType_Array(t, link.Rel);\n    t.is(link.Rel.length, 2);\n\n    checkType_String(t, link.Rel[0]);\n    t.is(link.Rel[0], relStr1);\n\n    checkType_String(t, link.Rel[1]);\n    t.is(link.Rel[1], relStr2);\n});\n\ntest(\"JSON DESERIALIZE: OPDSLink.Rel => string[] (recursive children)\", (t) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {};\n    json.rel = [relStr1, relStr2];\n    json.children = [];\n    json.children.push({ rel: [relStr2, relStr1] });\n    logJSON(json);\n\n    const link: OPDSLink = TaJsonDeserialize<OPDSLink>(json, OPDSLink);\n    inspect(link);\n\n    checkType_Array(t, link.Rel);\n    t.is(link.Rel.length, 2);\n\n    checkType_String(t, link.Rel[0]);\n    t.is(link.Rel[0], relStr1);\n\n    checkType_String(t, link.Rel[1]);\n    t.is(link.Rel[1], relStr2);\n\n    checkType_Array(t, link.Children);\n    t.is(link.Children.length, 1);\n\n    checkType_Array(t, link.Children[0].Rel);\n    t.is(link.Children[0].Rel.length, 2);\n\n    checkType_String(t, link.Children[0].Rel[0]);\n    t.is(link.Children[0].Rel[0], relStr2);\n\n    checkType_String(t, link.Children[0].Rel[1]);\n    t.is(link.Children[0].Rel[1], relStr1);\n});\n\ntest(\"JSON DESERIALIZE: OPDSLink.Rel => string[1]\", (t) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {};\n    json.rel = [relStr1];\n    logJSON(json);\n\n    const link: OPDSLink = TaJsonDeserialize<OPDSLink>(json, OPDSLink);\n    inspect(link);\n\n    checkType_Array(t, link.Rel);\n    t.is(link.Rel.length, 1);\n\n    checkType_String(t, link.Rel[0]);\n    t.is(link.Rel[0], relStr1);\n});\n\ntest(\"JSON DESERIALIZE: OPDSLink.Rel => string\", (t) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {};\n    json.rel = relStr1;\n    logJSON(json);\n\n    const link: OPDSLink = TaJsonDeserialize<OPDSLink>(json, OPDSLink);\n    inspect(link);\n\n    checkType_Array(t, link.Rel);\n    t.is(link.Rel.length, 1);\n\n    checkType_String(t, link.Rel[0]);\n    t.is(link.Rel[0], relStr1);\n});\n\ntest(\"JSON DESERIALIZE: OPDSLink.Rel => string (recursive children)\", (t) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const json: any = {};\n    json.rel = relStr1;\n    json.children = [];\n    json.children.push({ rel: relStr2 });\n    logJSON(json);\n\n    const link: OPDSLink = TaJsonDeserialize<OPDSLink>(json, OPDSLink);\n    inspect(link);\n\n    checkType_Array(t, link.Rel);\n    t.is(link.Rel.length, 1);\n\n    checkType_String(t, link.Rel[0]);\n    t.is(link.Rel[0], relStr1);\n\n    checkType_Array(t, link.Children);\n    t.is(link.Children.length, 1);\n\n    checkType_Array(t, link.Children[0].Rel);\n    t.is(link.Children[0].Rel.length, 1);\n\n    checkType_String(t, link.Children[0].Rel[0]);\n    t.is(link.Children[0].Rel[0], relStr2);\n});\n"]}
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ava_1 = require("ava");
var serializable_1 = require("r2-lcp-js/dist/es5/src/serializable");
var metadata_1 = require("r2-shared-js/dist/es5/src/models/metadata");
var init_globals_1 = require("../src/opds/init-globals");
var helpers_1 = require("./helpers");
init_globals_1.initGlobalConverters_OPDS();
init_globals_1.initGlobalConverters_GENERIC();
var titleStr1 = "str1";
var titleStr2 = "str2";
var titleLang1 = "lang1";
var titleLang2 = "lang2";
var titleLangStr1 = {};
titleLangStr1[titleLang1] = titleStr1;
titleLangStr1[titleLang2] = titleStr2;
var titleLangStr2 = {};
titleLangStr2[titleLang1] = titleStr2;
titleLangStr2[titleLang2] = titleStr1;
ava_1.default("JSON SERIALIZE: Metadata.Title => string", function (t) {
    var md = new metadata_1.Metadata();
    md.Title = titleStr1;
    helpers_1.inspect(md);
    var json = serializable_1.TaJsonSerialize(md);
    helpers_1.logJSON(json);
    helpers_1.checkType_String(t, json.title);
    t.is(json.title, titleStr1);
});
ava_1.default("JSON SERIALIZE: Metadata.Title => string-lang", function (t) {
    var md = new metadata_1.Metadata();
    md.Title = titleLangStr1;
    helpers_1.inspect(md);
    var json = serializable_1.TaJsonSerialize(md);
    helpers_1.logJSON(json);
    helpers_1.checkType_Object(t, json.title);
    var title = json.title;
    helpers_1.checkType_String(t, title[titleLang1]);
    t.is(title[titleLang1], titleStr1);
    helpers_1.checkType_String(t, title[titleLang2]);
    t.is(title[titleLang2], titleStr2);
});
ava_1.default("JSON DESERIALIZE: Metadata.Title => string", function (t) {
    var json = {};
    json.title = titleStr1;
    helpers_1.logJSON(json);
    var md = serializable_1.TaJsonDeserialize(json, metadata_1.Metadata);
    helpers_1.inspect(md);
    helpers_1.checkType_String(t, md.Title);
    t.is(md.Title, titleStr1);
});
ava_1.default("JSON DESERIALIZE: Metadata.Title => string-lang", function (t) {
    var json = {};
    json.title = titleLangStr1;
    helpers_1.logJSON(json);
    var md = serializable_1.TaJsonDeserialize(json, metadata_1.Metadata);
    helpers_1.inspect(md);
    helpers_1.checkType_Object(t, md.Title);
    helpers_1.checkType_String(t, md.Title[titleLang1]);
    t.is(md.Title[titleLang1], titleStr1);
    helpers_1.checkType_String(t, md.Title[titleLang2]);
    t.is(md.Title[titleLang2], titleStr2);
});
//# sourceMappingURL=test-JSON-Title.js.map
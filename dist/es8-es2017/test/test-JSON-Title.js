"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = require("ava");
const ta_json_1 = require("ta-json");
const init_globals_1 = require("../src/opds/init-globals");
const opds2_publicationMetadata_1 = require("../src/opds/opds2/opds2-publicationMetadata");
const helpers_1 = require("./helpers");
init_globals_1.initGlobalConverters_OPDS();
init_globals_1.initGlobalConverters_GENERIC();
const titleStr1 = "str1";
const titleStr2 = "str2";
const titleLang1 = "lang1";
const titleLang2 = "lang2";
const titleLangStr1 = {};
titleLangStr1[titleLang1] = titleStr1;
titleLangStr1[titleLang2] = titleStr2;
const titleLangStr2 = {};
titleLangStr2[titleLang1] = titleStr2;
titleLangStr2[titleLang2] = titleStr1;
ava_1.test("JSON SERIALIZE: OPDSPublicationMetadata.Title => string", (t) => {
    const md = new opds2_publicationMetadata_1.OPDSPublicationMetadata();
    md.Title = titleStr1;
    helpers_1.inspect(md);
    const json = ta_json_1.JSON.serialize(md);
    helpers_1.logJSON(json);
    helpers_1.checkType_String(t, json.title);
    t.is(json.title, titleStr1);
});
ava_1.test("JSON SERIALIZE: OPDSPublicationMetadata.Title => string-lang", (t) => {
    const md = new opds2_publicationMetadata_1.OPDSPublicationMetadata();
    md.Title = titleLangStr1;
    helpers_1.inspect(md);
    const json = ta_json_1.JSON.serialize(md);
    helpers_1.logJSON(json);
    helpers_1.checkType_Object(t, json.title);
    helpers_1.checkType_String(t, json.title[titleLang1]);
    t.is(json.title[titleLang1], titleStr1);
    helpers_1.checkType_String(t, json.title[titleLang2]);
    t.is(json.title[titleLang2], titleStr2);
});
ava_1.test("JSON DESERIALIZE: OPDSPublicationMetadata.Title => string", (t) => {
    const json = {};
    json.title = titleStr1;
    helpers_1.logJSON(json);
    const md = ta_json_1.JSON.deserialize(json, opds2_publicationMetadata_1.OPDSPublicationMetadata);
    helpers_1.inspect(md);
    helpers_1.checkType_String(t, md.Title);
    t.is(md.Title, titleStr1);
});
ava_1.test("JSON DESERIALIZE: OPDSPublicationMetadata.Title => string-lang", (t) => {
    const json = {};
    json.title = titleLangStr1;
    helpers_1.logJSON(json);
    const md = ta_json_1.JSON.deserialize(json, opds2_publicationMetadata_1.OPDSPublicationMetadata);
    helpers_1.inspect(md);
    helpers_1.checkType_Object(t, md.Title);
    helpers_1.checkType_String(t, md.Title[titleLang1]);
    t.is(md.Title[titleLang1], titleStr1);
    helpers_1.checkType_String(t, md.Title[titleLang2]);
    t.is(md.Title[titleLang2], titleStr2);
});
//# sourceMappingURL=test-JSON-Title.js.map
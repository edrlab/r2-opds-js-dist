{"version":3,"file":"test.js","sourceRoot":"","sources":["../../../test/test.ts"],"names":[],"mappings":"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","sourcesContent":["import test, { ExecutionContext } from \"ava\";\nimport * as debug_ from \"debug\";\nimport * as http from \"http\";\nimport * as https from \"https\";\nimport * as jsonDiff from \"json-diff\";\nimport { URL } from \"url\";\nimport * as xmldom from \"@xmldom/xmldom\";\n\nimport { TaJsonDeserialize, TaJsonSerialize } from \"@r2-lcp-js/serializable\";\nimport { Publication } from \"@r2-shared-js/models/publication\";\nimport { sortObject, traverseJsonObjects } from \"@r2-utils-js/_utils/JsonUtils\";\nimport { XML } from \"@r2-utils-js/_utils/xml-js-mapper\";\n\nimport {\n    convertOpds1ToOpds2,\n    convertOpds1ToOpds2_EntryToPublication,\n    unescapeHtmlEntities,\n} from \"../src/opds/converter\";\nimport { initGlobalConverters_GENERIC, initGlobalConverters_OPDS } from \"../src/opds/init-globals\";\nimport { OPDS } from \"../src/opds/opds1/opds\";\nimport { Entry } from \"../src/opds/opds1/opds-entry\";\nimport { OPDSFeed } from \"../src/opds/opds2/opds2\";\nimport { OPDSAuthenticationDoc } from \"../src/opds/opds2/opds2-authentication-doc\";\nimport { OPDSPublication } from \"../src/opds/opds2/opds2-publication\";\n\ninitGlobalConverters_OPDS();\ninitGlobalConverters_GENERIC();\n\nconst debug = debug_(\"r2:opds#test\");\n\n// Note to run single test on the command line interface:\n// npm run test -- --match=\"XXX\"\n\n// ==========================\nconst plainTextWithEscapedHtmlChars = `\n\nThis &amp; is &#039;a&quot;        test\n\\tof &lt; summary text &gt;\n\n`;\n\nconst xhtmlWithSomeEscapedHtmlCharsPrefixedNamespace = `\n<xhtm:div>\n    Hello &amp;\\t<xhtm:b>  world &lt; &quot;_&#039; &gt;  </xhtm:b>!\n</xhtm:div>\n`;\n\nconst xhtmlWithSomeEscapedHtmlCharsNoPrefixedNamespace = `\n<div xmlns=\"http://www.w3.org/1999/xhtml\">\n    Hi &amp;\\t<b>  world &lt; &quot;_&#039; &gt;  </b>!\n</div>\n`;\n\nconst xmlWithSomeEscapedHtmlCharsAtomDefaultNamespace = `\n<div>\n    Oops &amp;\\t<b>  world &lt; &quot;_&#039; &gt;  </b>!\n</div>\n`;\n\nconst escapedHtmlWithSomeDoubleEscapedHtmlChars = `\n&lt;div&gt;\n    Hello &amp;amp;\\t&lt;b&gt;  world &amp;lt; &amp;quot;_&amp;#039; &amp;gt;  &lt;/b&gt;!\n&lt;/div&gt;\n`;\n\ntest(\"OPDS1-2 description: summary + content(XHTML NAMESPACE PREFIX)\", async (t) => {\n    const xmlSrc = `\n<entry\n    xmlns=\"http://www.w3.org/2005/Atom\"\n    xmlns:xhtm=\"http://www.w3.org/1999/xhtml\">\n<summary>${plainTextWithEscapedHtmlChars}</summary>\n<content type=\"xhtml\">${xhtmlWithSomeEscapedHtmlCharsPrefixedNamespace}</content>\n</entry>\n    `;\n    const xmlDom = new xmldom.DOMParser().parseFromString(xmlSrc); // , \"application/xml\"\n    const isEntry = xmlDom.documentElement.localName === \"entry\";\n    t.true(isEntry);\n    const opds1Entry = XML.deserialize<Entry>(xmlDom, Entry);\n    t.is(\n        // ALREADY UNESCAPED BY THE XPATH text() selector\n        // e.g. @XmlXPathSelector(\"atom:content/text()\")\n        opds1Entry.Summary,\n        unescapeHtmlEntities(plainTextWithEscapedHtmlChars),\n    );\n\n    // CHILD(REN) XML NODES ALREADY SERIALIZED (INC. NAMESPACES) BY THE XPATH text() selector\n    // e.g. @XmlXPathSelector(\"atom:content/text()\")\n    // ... BUT ONLY \"ESSENTIAL\" ESCAPED (&amp; and &lt;)\n    const toMatch = xhtmlWithSomeEscapedHtmlCharsPrefixedNamespace\n        // .replace(/&lt;/g, \"<\") // &#60;\n        // .replace(/&gt;/g, \">\") // &#62;\n        // eslint-disable-next-line prettier/prettier\n        .replace(/&quot;/g, \"\\\"\") // &#34;\n        .replace(/&#039;/g, \"'\"); // &apos;\n    // .replace(/&apos;/g, \"'\") // xhtml, not html\n    // .replace(/&amp;/g, \"&\") // &#38;\n    t.is(opds1Entry.Content.replace(/ xmlns:xhtm=\"http:\\/\\/www\\.w3\\.org\\/1999\\/xhtml\"/, \"\"), toMatch);\n    const opds2Pub = convertOpds1ToOpds2_EntryToPublication(opds1Entry);\n    t.is(opds2Pub.Metadata.Description.replace(/ xmlns:xhtm=\"http:\\/\\/www\\.w3\\.org\\/1999\\/xhtml\"/, \"\"), toMatch);\n});\n\ntest(\"OPDS1-2 description: summary + content(XHTML NAMESPACE NO PREFIX)\", async (t) => {\n    const xmlSrc = `\n<entry\n    xmlns=\"http://www.w3.org/2005/Atom\"\n    xmlns:xhtm=\"http://www.w3.org/1999/xhtml\">\n<summary>${plainTextWithEscapedHtmlChars}</summary>\n<content type=\"xhtml\">${xhtmlWithSomeEscapedHtmlCharsNoPrefixedNamespace}</content>\n</entry>\n    `;\n    const xmlDom = new xmldom.DOMParser().parseFromString(xmlSrc); // , \"application/xml\"\n    const isEntry = xmlDom.documentElement.localName === \"entry\";\n    t.true(isEntry);\n    const opds1Entry = XML.deserialize<Entry>(xmlDom, Entry);\n    t.is(\n        // ALREADY UNESCAPED BY THE XPATH text() selector\n        // e.g. @XmlXPathSelector(\"atom:content/text()\")\n        opds1Entry.Summary,\n        unescapeHtmlEntities(plainTextWithEscapedHtmlChars),\n    );\n\n    // CHILD(REN) XML NODES ALREADY SERIALIZED (INC. NAMESPACES) BY THE XPATH text() selector\n    // e.g. @XmlXPathSelector(\"atom:content/text()\")\n    // ... BUT ONLY \"ESSENTIAL\" ESCAPED (&amp; and &lt;)\n    const toMatch = xhtmlWithSomeEscapedHtmlCharsNoPrefixedNamespace\n        // .replace(/&lt;/g, \"<\") // &#60;\n        // .replace(/&gt;/g, \">\") // &#62;\n        // eslint-disable-next-line prettier/prettier\n        .replace(/&quot;/g, \"\\\"\") // &#34;\n        .replace(/&#039;/g, \"'\"); // &apos;\n    // .replace(/&apos;/g, \"'\") // xhtml, not html\n    // .replace(/&amp;/g, \"&\") // &#38;\n    t.is(opds1Entry.Content, toMatch);\n    const opds2Pub = convertOpds1ToOpds2_EntryToPublication(opds1Entry);\n    t.is(opds2Pub.Metadata.Description, toMatch);\n});\n\ntest(\"OPDS1-2 description: summary + content(XML DEFAULT ATOM NAMESPACE)\", async (t) => {\n    const xmlSrc = `\n<entry\n    xmlns=\"http://www.w3.org/2005/Atom\"\n    xmlns:xhtm=\"http://www.w3.org/1999/xhtml\">\n<summary>${plainTextWithEscapedHtmlChars}</summary>\n<content type=\"xhtml\">${xmlWithSomeEscapedHtmlCharsAtomDefaultNamespace}</content>\n</entry>\n    `;\n    const xmlDom = new xmldom.DOMParser().parseFromString(xmlSrc); // , \"application/xml\"\n    const isEntry = xmlDom.documentElement.localName === \"entry\";\n    t.true(isEntry);\n    const opds1Entry = XML.deserialize<Entry>(xmlDom, Entry);\n    t.is(\n        // ALREADY UNESCAPED BY THE XPATH text() selector\n        // e.g. @XmlXPathSelector(\"atom:content/text()\")\n        opds1Entry.Summary,\n        unescapeHtmlEntities(plainTextWithEscapedHtmlChars),\n    );\n\n    // CHILD(REN) XML NODES ALREADY SERIALIZED (INC. NAMESPACES) BY THE XPATH text() selector\n    // e.g. @XmlXPathSelector(\"atom:content/text()\")\n    // ... BUT ONLY \"ESSENTIAL\" ESCAPED (&amp; and &lt;)\n    const toMatch = xmlWithSomeEscapedHtmlCharsAtomDefaultNamespace\n        // .replace(/&lt;/g, \"<\") // &#60;\n        // .replace(/&gt;/g, \">\") // &#62;\n        // eslint-disable-next-line prettier/prettier\n        .replace(/&quot;/g, \"\\\"\") // &#34;\n        .replace(/&#039;/g, \"'\"); // &apos;\n    // .replace(/&apos;/g, \"'\") // xhtml, not html\n    // .replace(/&amp;/g, \"&\") // &#38;\n    t.is(opds1Entry.Content.replace(/ xmlns=\"http:\\/\\/www\\.w3\\.org\\/2005\\/Atom\"/, \"\"), toMatch);\n    const opds2Pub = convertOpds1ToOpds2_EntryToPublication(opds1Entry);\n    t.is(opds2Pub.Metadata.Description.replace(/ xmlns=\"http:\\/\\/www\\.w3\\.org\\/1999\\/xhtml\"/, \"\"), toMatch);\n});\n\ntest(\"OPDS1-2 description: summary\", async (t) => {\n    const xmlSrc = `\n<entry\n    xmlns=\"http://www.w3.org/2005/Atom\"\n    xmlns:xhtm=\"http://www.w3.org/1999/xhtml\">\n<summary>${plainTextWithEscapedHtmlChars}</summary>\n</entry>\n    `;\n    const xmlDom = new xmldom.DOMParser().parseFromString(xmlSrc); // , \"application/xml\"\n    const isEntry = xmlDom.documentElement.localName === \"entry\";\n    t.true(isEntry);\n    const opds1Entry = XML.deserialize<Entry>(xmlDom, Entry);\n    const toMatch = unescapeHtmlEntities(plainTextWithEscapedHtmlChars);\n    t.is(\n        // ALREADY UNESCAPED BY THE XPATH text() selector\n        // e.g. @XmlXPathSelector(\"atom:content/text()\")\n        opds1Entry.Summary,\n        toMatch,\n    );\n    const opds2Pub = convertOpds1ToOpds2_EntryToPublication(opds1Entry);\n    t.is(opds2Pub.Metadata.Description, toMatch);\n});\ntest(\"OPDS1-2 description: summary + content(HTML)\", async (t) => {\n    const xmlSrc = `\n<entry\n    xmlns=\"http://www.w3.org/2005/Atom\"\n    xmlns:xhtm=\"http://www.w3.org/1999/xhtml\">\n<summary>${plainTextWithEscapedHtmlChars}</summary>\n<content type=\"html\">${escapedHtmlWithSomeDoubleEscapedHtmlChars}</content>\n</entry>\n    `;\n    const xmlDom = new xmldom.DOMParser().parseFromString(xmlSrc); // , \"application/xml\"\n    const isEntry = xmlDom.documentElement.localName === \"entry\";\n    t.true(isEntry);\n    const opds1Entry = XML.deserialize<Entry>(xmlDom, Entry);\n    t.is(\n        // ALREADY UNESCAPED BY THE XPATH text() selector\n        // e.g. @XmlXPathSelector(\"atom:content/text()\")\n        opds1Entry.Summary,\n        unescapeHtmlEntities(plainTextWithEscapedHtmlChars),\n    );\n\n    // ALREADY UNESCAPED BY THE XPATH text() selector\n    // e.g. @XmlXPathSelector(\"atom:content/text()\")\n    const toMatch = unescapeHtmlEntities(escapedHtmlWithSomeDoubleEscapedHtmlChars);\n    t.is(opds1Entry.Content, toMatch);\n    const opds2Pub = convertOpds1ToOpds2_EntryToPublication(opds1Entry);\n    t.is(opds2Pub.Metadata.Description, toMatch);\n});\n\nasync function fn() {\n    return Promise.resolve(\"foo\");\n}\ntest(\"dummy async test\", async (t) => {\n    debug(\"test ASYNC\");\n    t.is(await fn(), \"foo\");\n});\n\nconst MAX_TESTS = parseInt(process.env.MAX_TESTS || \"0\", 10) || 10;\n\nconst FEEDS_FIRST = process.env.FEEDS_FIRST || false;\n\ninterface OPDSFeedAndPubUrls {\n    feeds: Set<string>;\n    pubs: Set<string>;\n    audiowebpubs: Set<string>;\n    webpubs: Set<string>;\n    authentications: Set<string>;\n}\n\nasync function delay(okay: boolean): Promise<boolean> {\n    return new Promise((resolve, _reject) => {\n        setTimeout(() => {\n            resolve(okay);\n        }, 1000);\n    });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function parseCompareJSONs(url: string, json1: any, json2: any): Promise<OPDSFeedAndPubUrls> {\n    return new Promise<OPDSFeedAndPubUrls>((resolve, reject) => {\n        if (json1 !== json2) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const harmonizeNulls = (obj: any) => {\n                if (obj !== null && typeof obj !== \"undefined\") {\n                    if (obj instanceof Array) {\n                        for (let i = obj.length - 1; i >= 0; i--) {\n                            if (obj[i] === null) {\n                                obj.splice(i, 1);\n                            }\n                        }\n                    } else if (typeof obj === \"object\") {\n                        Object.keys(obj).forEach((key) => {\n                            if (obj[key] === null) {\n                                delete obj[key];\n                            }\n                        });\n                    }\n                }\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const harmonizeBitrateAndTrack = (obj: any) => {\n                if (typeof obj.bitrate === \"string\") {\n                    obj.bitrate = parseFloat(obj.bitrate);\n                }\n                if (typeof obj.tracks === \"number\") {\n                    delete obj.tracks;\n                }\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const harmonizeDate = (obj: any) => {\n                [\"updated\", \"published\", \"since\", \"until\", \"modified\"].forEach((term) => {\n                    if (obj[term]) {\n                        if (typeof obj[term] === \"string\" || typeof obj[term] === \"number\") {\n                            const date = new Date(obj[term] as string);\n                            const time = date.getTime();\n                            if (!isNaN(time)) {\n                                const tmp = date.toISOString();\n                                if (obj[term] !== tmp) {\n                                    // console.log(\"=== \" + term + \": \" + obj[term] + \" => \" + tmp);\n                                    obj[term] = tmp;\n                                }\n                            } else {\n                                console.log(\"TIME? \" + time);\n                            }\n                        }\n                    }\n                });\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const harmonizeName = (obj: any) => {\n                // tslint:disable-next-line:max-line-length\n                [\n                    \"subject\",\n                    \"collection\",\n                    \"series\",\n                    \"author\",\n                    \"translator\",\n                    \"editor\",\n                    \"artist\",\n                    \"illustrator\",\n                    \"letterer\",\n                    \"penciler\",\n                    \"colorist\",\n                    \"inker\",\n                    \"narrator\",\n                    \"contributor\",\n                    \"publisher\",\n                    \"imprint\",\n                ].forEach((term) => {\n                    if (obj[term]) {\n                        const isArray = obj[term] instanceof Array;\n                        const arr = isArray ? obj[term] : [obj[term]];\n                        // tslint:disable-next-line:prefer-for-of\n                        for (let i = 0; i < arr.length; i++) {\n                            if (typeof arr[i] === \"string\") {\n                                // console.log(\"string to name object => \" + term + \": \" + arr[i]);\n                                if (isArray) {\n                                    obj[term][i] = { name: obj[term][i] };\n                                } else {\n                                    obj[term] = { name: obj[term] };\n                                }\n                            } else if (typeof arr[i] === \"object\") {\n                                if (arr[i].name) {\n                                    if (typeof arr[i].name === \"string\") {\n                                        // // console.log(\"name string in object to lang map => \" +\n                                        // // term + \": \" + arr[i].name);\n                                        // if (isArray) {\n                                        //     obj[term][i].name = { _: obj[term][i].name };\n                                        // } else {\n                                        //     obj[term].name = { _: obj[term].name };\n                                        // }\n                                        // do nothing\n                                    } else if (typeof arr[i].name === \"object\") {\n                                        // IStringMap\n                                        // do nothing\n                                    }\n                                }\n                            }\n                        }\n                        if (!isArray) {\n                            obj[term] = [obj[term]];\n                        }\n                    }\n                });\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const harmonizeArrays = (obj: any) => {\n                // tslint:disable-next-line:max-line-length\n                [\"role\", \"@context\", \"rel\", \"language\", \"conformsTo\", \"feature\"].forEach((term) => {\n                    if (obj[term]) {\n                        const isArray = obj[term] instanceof Array;\n                        if (!isArray) {\n                            obj[term] = [obj[term]];\n                        }\n                    }\n                });\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            // const harmonizeFieldnames = (obj: any) => {\n            //     if (obj.belongs_to) {\n            //         obj.belongsTo = obj.belongs_to;\n            //         obj.belongs_to = undefined;\n            //         delete obj.belongs_to;\n            //     }\n            //     if (obj.sort_as) {\n            //         obj.sortAs = obj.sort_as;\n            //         obj.sort_as = undefined;\n            //         delete obj.sort_as;\n            //     }\n            //     if (obj.direction) {\n            //         obj.readingProgression = obj.direction;\n            //         obj.direction = undefined;\n            //         delete obj.direction;\n            //     }\n            //     if (obj.spine) {\n            //         obj.readingOrder = obj.spine;\n            //         obj.spine = undefined;\n            //         delete obj.spine;\n            //     }\n            // };\n\n            // debug(json2);\n            // debug(\"------------------------\");\n            // debug(\"------------------------\");\n\n            // console.log(\"=== HARMONIZING JSON1 ...\");\n            traverseJsonObjects(json1, (obj) => {\n                if (obj !== null) {\n                    harmonizeDate(obj);\n                }\n            });\n            traverseJsonObjects(json1, (obj) => {\n                if (obj !== null) {\n                    harmonizeName(obj);\n                }\n            });\n            traverseJsonObjects(json1, (obj) => {\n                if (obj !== null) {\n                    harmonizeArrays(obj);\n                }\n            });\n            traverseJsonObjects(json1, (obj) => {\n                if (obj !== null) {\n                    harmonizeBitrateAndTrack(obj);\n                }\n            });\n            traverseJsonObjects(json1, (obj) => {\n                if (obj !== null) {\n                    harmonizeNulls(obj);\n                }\n            });\n            // console.log(\"=== HARMONIZING JSON2 ...\");\n            traverseJsonObjects(json2, (obj) => {\n                if (obj !== null) {\n                    harmonizeDate(obj);\n                }\n            });\n            traverseJsonObjects(json2, (obj) => {\n                if (obj !== null) {\n                    harmonizeName(obj);\n                }\n            });\n            traverseJsonObjects(json2, (obj) => {\n                if (obj !== null) {\n                    harmonizeArrays(obj);\n                }\n            });\n            traverseJsonObjects(json2, (obj) => {\n                if (obj !== null) {\n                    harmonizeBitrateAndTrack(obj);\n                }\n            });\n            traverseJsonObjects(json2, (obj) => {\n                if (obj !== null) {\n                    harmonizeNulls(obj);\n                }\n            });\n            json1 = sortObject(json1);\n            json2 = sortObject(json2);\n\n            const str1 = JSON.stringify(json1, null, 2);\n            const str2 = JSON.stringify(json2, null, 2);\n\n            if (str1 !== str2) {\n                process.stdout.write(\"###########################\\n\");\n                process.stdout.write(\"###########################\\n\");\n                process.stdout.write(\"#### JSON DIFF\\n\");\n                process.stdout.write(jsonDiff.diffString(json1, json2) + \"\\n\");\n                // process.stdout.write(\"###########################\\n\");\n                // process.stdout.write(\"###########################\\n\");\n                // process.stdout.write(jsonDiff.diffString(opds2Json, json) + \"\\n\");\n                process.stdout.write(\"###########################\\n\");\n                process.stdout.write(\"###########################\\n\");\n                // console.log(jsonDiff.diff(json, opds2Json));\n\n                reject(\"JSON DIFF! :(\");\n                return;\n            }\n        }\n\n        const thisUrl = new URL(url);\n        const thisUrlStr = thisUrl.toString();\n        const feedUrls = new Set<string>();\n        const pubUrls = new Set<string>();\n        const webpubUrls = new Set<string>();\n        const audiowebpubUrls = new Set<string>();\n        const authenticationUrls = new Set<string>();\n\n        traverseJsonObjects(json1, (obj) => {\n            if (obj === null) {\n                return; // skip\n            }\n            const isFeed = obj.type === \"application/opds+json\";\n            const isPub = obj.type === \"application/opds-publication+json\";\n            const isWebPubManifestAudio = obj.type === \"application/audiobook+json\";\n            const isAuth = obj.type === \"application/vnd.opds.authentication.v1.0+json\";\n\n            // to skip erroneous feed (dirty detection, but will do for these tests)\n            const isWebPubManifest =\n                obj.type === \"application/webpub+json\" && obj.href && obj.href.indexOf(\".epub\") < 0;\n\n            if (obj.href && (isFeed || isPub || isWebPubManifest || isWebPubManifestAudio || isAuth)) {\n                const u = new URL(obj.href, thisUrl);\n                const uStr = u.toString();\n                if (uStr !== thisUrlStr) {\n                    if (isFeed) {\n                        feedUrls.add(uStr);\n                    } else if (isPub) {\n                        pubUrls.add(uStr);\n                    } else if (isWebPubManifest) {\n                        webpubUrls.add(uStr);\n                    } else if (isWebPubManifestAudio) {\n                        audiowebpubUrls.add(uStr);\n                    } else if (isAuth) {\n                        authenticationUrls.add(uStr);\n                    }\n\n                    // console.log(\"URL: \" + obj.href + \" => \" + uStr);\n                } else {\n                    // console.log(\"URL: \" + obj.href + \" (skipped)\");\n                }\n            }\n        });\n\n        const set: OPDSFeedAndPubUrls = {\n            audiowebpubs: audiowebpubUrls,\n            authentications: authenticationUrls,\n            feeds: feedUrls,\n            pubs: pubUrls,\n            webpubs: webpubUrls,\n        };\n        resolve(set);\n    });\n}\n\nasync function opds2Test(url: string): Promise<OPDSFeedAndPubUrls> {\n    return new Promise<OPDSFeedAndPubUrls>((resolve, reject) => {\n        // debug(\"------------------------\");\n        debug(url);\n        // debug(\"------------------------\");\n\n        const proto = /^https:\\/\\//.test(url) ? https : http;\n        proto\n            .get(url, (response) => {\n                let str: string | undefined;\n                let buffs: Buffer[] | undefined;\n\n                if (response.statusMessage) {\n                    debug(`${url} STATUS ==> ${response.statusMessage}`);\n                }\n                if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                    debug(`${url} ==> ${response.statusCode} (skipped)`);\n                    const empty: OPDSFeedAndPubUrls = {\n                        audiowebpubs: new Set<string>([]),\n                        authentications: new Set<string>([]),\n                        feeds: new Set<string>([]),\n                        pubs: new Set<string>([]),\n                        webpubs: new Set<string>([]),\n                    };\n                    resolve(empty);\n                    return;\n                }\n\n                response.on(\"data\", (chunk) => {\n                    if (typeof chunk === \"string\") {\n                        if (!str) {\n                            str = \"\";\n                        }\n                        str += chunk;\n                    } else {\n                        if (!buffs) {\n                            buffs = [];\n                        }\n                        buffs.push(chunk);\n                    }\n                });\n\n                response.on(\"end\", async () => {\n                    let src: string | undefined;\n                    if (str) {\n                        src = str;\n                    } else if (buffs) {\n                        src = Buffer.concat(buffs).toString(\"utf8\");\n                    }\n                    if (!src) {\n                        reject(`Problem loading: ${url}`);\n                        return;\n                    }\n\n                    // \"published\" metadata incorrect date/time syntax\n                    // https://catalog.feedbooks.com/catalog/public_domain.json\n                    // https://catalog.feedbooks.com/publicdomain/browse/top.json?cat=FBNFC000000&lang=en\n                    //.    \"-0514-01-01T00:00:00Z\"\n                    //.    \"-0322-01-01T00:00:00Z\"\n                    //.    \"-0347-01-01T00:00:00Z\"\n                    //.    \"-0600-01-01T00:00:00Z\"\n                    //.    \"-1790-01-01T00:00:00Z\"\n                    //.    \"-0380-01-01T00:00:00Z\"\n                    //.    \"-0514-01-01T00:00:00+00:09\"\n                    //     \"-0322-01-01T00:00:00+00:09\"\n                    //     \"-0347-01-01T00:00:00+00:09\"\n                    //     \"-1790-01-01T00:00:00+00:09\"\n                    //     \"-0600-01-01T00:00:00+00:09\"\n                    //     \"-0380-01-01T00:00:00+00:09\"\n                    //     \"-0400-01-01T00:00:00+00:09\"\n                    // eslint-disable-next-line quotes\n                    src = src.replace(/\"published\":\\s*\"-[^\"]+\"/g, '\"published\": \"2022-01-01T00:00:00Z\"');\n\n                    const json1 = JSON.parse(src);\n                    // traverseJsonObjects(json1,\n                    //     (obj) => {\n                    //         harmonizeFieldnames(obj);\n                    //     });\n                    // debug(json1);\n                    // debug(\"------------------------\");\n                    // debug(\"------------------------\");\n                    const isPublication =\n                        !json1.publications && !json1.navigation && !json1.groups && !json1.catalogs && json1.metadata;\n                    const isAuth = !isPublication && json1.authentication;\n\n                    const opds2Feed: OPDSPublication | OPDSFeed | OPDSAuthenticationDoc =\n                        // tslint:disable-next-line: max-line-length\n                        isPublication\n                            ? TaJsonDeserialize<OPDSPublication>(json1, OPDSPublication) // \"application/opds-publication+json\"\n                            : // tslint:disable-next-line: max-line-length\n                              isAuth\n                              ? TaJsonDeserialize<OPDSAuthenticationDoc>(json1, OPDSAuthenticationDoc) // \"application/vnd.opds.authentication.v1.0+json\"\n                              : TaJsonDeserialize<OPDSFeed>(json1, OPDSFeed); // \"application/opds+json\"\n\n                    // eslint-disable-next-line prettier/prettier\n                    // debug(opds2Feed);\n                    // debug(\"------------------------\");\n                    // debug(\"------------------------\");\n\n                    // if (isPublication) { // OPDSPublication is not IWithAdditionalJSON\n                    //     const pub = opds2Feed as OPDSPublication;\n                    // } else if (isAuth) { // OPDSAuthenticationDoc\n                    //     const authDoc = opds2Feed as IWithAdditionalJSON;\n                    //     if (authDoc.AdditionalJSON) {\n                    //         Object.keys(authDoc.AdditionalJSON).forEach((key) => {\n                    //             if (authDoc.AdditionalJSON.hasOwnProperty(key)) {\n                    //                 (authDoc as any)[key] = authDoc.AdditionalJSON[key];\n                    //                 delete authDoc.AdditionalJSON[key];\n                    //             }\n                    //         });\n                    //         debug(authDoc);\n                    //         debug(authDoc.AdditionalJSON);\n                    //     }\n                    // } else { // OPDSFeed is not IWithAdditionalJSON\n                    //     const feed = opds2Feed as OPDSFeed;\n                    // }\n\n                    const json2 = TaJsonSerialize(opds2Feed);\n\n                    let res: OPDSFeedAndPubUrls | undefined;\n                    try {\n                        res = await parseCompareJSONs(url, json1, json2);\n                    } catch (err) {\n                        debug(err);\n                        reject(err);\n                        return;\n                    }\n                    resolve(res);\n                });\n            })\n            .on(\"error\", (err) => {\n                debug(`${url} ERROR ==> ${err}`);\n                // reject(err);\n                const empty: OPDSFeedAndPubUrls = {\n                    audiowebpubs: new Set<string>([]),\n                    authentications: new Set<string>([]),\n                    feeds: new Set<string>([]),\n                    pubs: new Set<string>([]),\n                    webpubs: new Set<string>([]),\n                };\n                resolve(empty);\n            });\n    });\n}\n\nasync function webpubTest(url: string, alreadyDone: Set<string>): Promise<boolean> {\n    alreadyDone.add(url);\n\n    return new Promise((resolve, reject) => {\n        // debug(\"------------------------\");\n        debug(url);\n        // debug(\"------------------------\");\n\n        const proto = /^https:\\/\\//.test(url) ? https : http;\n        proto\n            .get(url, (response) => {\n                let str: string | undefined;\n                let buffs: Buffer[] | undefined;\n\n                if (response.statusMessage) {\n                    debug(`${url} STATUS ==> ${response.statusMessage}`);\n                }\n                if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                    debug(`${url} ==> ${response.statusCode} (skipped)`);\n                    resolve(true);\n                    return;\n                }\n\n                response.on(\"data\", (chunk) => {\n                    if (typeof chunk === \"string\") {\n                        if (!str) {\n                            str = \"\";\n                        }\n                        str += chunk;\n                    } else {\n                        if (!buffs) {\n                            buffs = [];\n                        }\n                        buffs.push(chunk);\n                    }\n                });\n\n                response.on(\"end\", async () => {\n                    let src: string | undefined;\n                    if (str) {\n                        src = str;\n                    } else if (buffs) {\n                        src = Buffer.concat(buffs).toString(\"utf8\");\n                    }\n                    if (!src) {\n                        reject(`Problem loading: ${url}`);\n                        return;\n                    }\n                    // debug(src);\n\n                    const json1 = JSON.parse(src);\n                    // debug(json1);\n\n                    let pub: Publication | undefined;\n                    try {\n                        pub = TaJsonDeserialize<Publication>(json1, Publication);\n                    } catch (err) {\n                        debug(err);\n                        reject(err);\n                        return;\n                    }\n\n                    // debug(pub);\n                    const json2 = TaJsonSerialize(pub);\n\n                    // let res: OPDSFeedAndPubUrls | undefined;\n                    try {\n                        // res =\n                        await parseCompareJSONs(url, json1, json2);\n                    } catch (err) {\n                        debug(err);\n                        reject(err);\n                        return;\n                    }\n\n                    // debug(res); // we could recurse again on pub links ...\n                    resolve(true);\n                });\n            })\n            .on(\"error\", (err) => {\n                debug(`${url} ERROR ==> ${err}`);\n                // reject(err);\n                resolve(true);\n            });\n    });\n}\n\nasync function recursePubs(t: ExecutionContext, urls: OPDSFeedAndPubUrls, alreadyDone: Set<string>): Promise<boolean> {\n    const urlsTodoWebPubs: string[] = [];\n    urls.webpubs.forEach((u) => {\n        if (!alreadyDone.has(u)) {\n            urlsTodoWebPubs.push(u);\n        }\n    });\n\n    for (const href of urlsTodoWebPubs) {\n        try {\n            const okay = await webpubTest(href, alreadyDone);\n            if (!okay) {\n                return false;\n            }\n        } catch (err) {\n            debug(err);\n            // early termination\n            return false;\n        }\n    }\n\n    const urlsTodoAudioWebPubs: string[] = [];\n    urls.audiowebpubs.forEach((u) => {\n        if (!alreadyDone.has(u)) {\n            urlsTodoAudioWebPubs.push(u);\n        }\n    });\n\n    for (const href of urlsTodoAudioWebPubs) {\n        try {\n            const okay = await webpubTest(href, alreadyDone);\n            if (!okay) {\n                return false;\n            }\n        } catch (err) {\n            debug(err);\n            // early termination\n            return false;\n        }\n    }\n\n    const urlsTodoPubs: string[] = [];\n    urls.pubs.forEach((u) => {\n        if (!alreadyDone.has(u)) {\n            urlsTodoPubs.push(u);\n        }\n    });\n\n    for (const href of urlsTodoPubs) {\n        const okay = await testUrl(t, href, alreadyDone);\n        if (!okay) {\n            return false;\n        }\n    }\n\n    const urlsAuths: string[] = [];\n    urls.authentications.forEach((u) => {\n        if (!alreadyDone.has(u)) {\n            urlsAuths.push(u);\n        }\n    });\n\n    for (const href of urlsAuths) {\n        const okay = await testUrl(t, href, alreadyDone);\n        if (!okay) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n// tslint:disable-next-line:max-line-length\nasync function recurseFeeds(t: ExecutionContext, urls: OPDSFeedAndPubUrls, alreadyDone: Set<string>): Promise<boolean> {\n    const urlsTodoFeeds: string[] = [];\n    urls.feeds.forEach((u) => {\n        if (!alreadyDone.has(u)) {\n            urlsTodoFeeds.push(u);\n        }\n    });\n\n    for (const href of urlsTodoFeeds) {\n        const okay = await testUrl(t, href, alreadyDone);\n        if (!okay) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nasync function recurse(t: ExecutionContext, urls: OPDSFeedAndPubUrls, alreadyDone: Set<string>): Promise<boolean> {\n    if (FEEDS_FIRST) {\n        const b1 = await recurseFeeds(t, urls, alreadyDone);\n        if (!b1) {\n            return b1;\n        }\n        const b2 = await recursePubs(t, urls, alreadyDone);\n        return b2;\n    }\n\n    const b3 = await recursePubs(t, urls, alreadyDone);\n    if (!b3) {\n        return b3;\n    }\n    const b4 = await recurseFeeds(t, urls, alreadyDone);\n    return b4;\n}\n\nasync function testUrl(t: ExecutionContext, url: string, alreadyDone: Set<string>): Promise<boolean> {\n    if (alreadyDone.size >= MAX_TESTS) {\n        return true;\n    }\n\n    alreadyDone.add(url);\n\n    let urls: OPDSFeedAndPubUrls | undefined;\n    try {\n        urls = await opds2Test(url);\n    } catch (err) {\n        debug(err);\n        // early termination\n        return false;\n    }\n\n    if (urls) {\n        return await recurse(t, urls, alreadyDone);\n    }\n\n    return true;\n}\n\nasync function testUrlAlt(t: ExecutionContext, url: string, alreadyDone: Set<string>): Promise<boolean> {\n    if (alreadyDone.size >= MAX_TESTS) {\n        return true;\n    }\n\n    alreadyDone.add(url);\n\n    const promise = new Promise<boolean>((resolve, reject) => {\n        const proto = /^https:\\/\\//.test(url) ? https : http;\n        proto\n            .get(url, async (response) => {\n                let str: string | undefined;\n                let buffs: Buffer[] | undefined;\n\n                if (response.statusMessage) {\n                    debug(`${url} STATUS ==> ${response.statusMessage}`);\n                }\n                if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n                    debug(`${url} ==> ${response.statusCode} (skipped)`);\n                    resolve(true);\n                    return;\n                }\n\n                response.on(\"data\", (chunk) => {\n                    if (typeof chunk === \"string\") {\n                        if (!str) {\n                            str = \"\";\n                        }\n                        str += chunk;\n                    } else {\n                        if (!buffs) {\n                            buffs = [];\n                        }\n                        buffs.push(chunk);\n                    }\n                });\n\n                response.on(\"end\", async () => {\n                    let src: string | undefined;\n                    if (str) {\n                        src = str;\n                    } else if (buffs) {\n                        src = Buffer.concat(buffs).toString(\"utf8\");\n                    }\n                    if (!src) {\n                        debug(`Problem loading: ${url} (skip)`);\n                        resolve(true);\n                        return;\n                    }\n                    // debug(src);\n\n                    const xmlDom = new xmldom.DOMParser().parseFromString(src);\n                    if (!xmlDom || !xmlDom.documentElement) {\n                        reject(\"Problem parsing OPDS1 XML. Fail.\");\n                        return;\n                    }\n                    const isEntry = xmlDom.documentElement.localName === \"entry\";\n                    if (isEntry) {\n                        debug(\"Expecting OPDS1 Feed, not Entry. Skip.\");\n                        resolve(true);\n                        return;\n                    }\n\n                    const opds1Feed = XML.deserialize<OPDS>(xmlDom, OPDS);\n                    const opds2Feed: OPDSFeed = convertOpds1ToOpds2(opds1Feed);\n                    const opds2FeedJson = TaJsonSerialize(opds2Feed);\n                    // debug(opds2FeedJson);\n\n                    let urls: OPDSFeedAndPubUrls | undefined;\n                    try {\n                        urls = await parseCompareJSONs(url, opds2FeedJson, opds2FeedJson);\n                    } catch (err) {\n                        reject(err);\n                        return;\n                    }\n\n                    if (urls) {\n                        const b = await recurse(t, urls, alreadyDone);\n                        resolve(b);\n                        return;\n                    }\n\n                    resolve(true);\n                    return;\n                });\n            })\n            .on(\"error\", (err) => {\n                debug(`${url} ERROR ==> ${err}`);\n                // reject(err);\n                resolve(true);\n            });\n    });\n    return await promise;\n}\n\nasync function runUrlTest(t: ExecutionContext, url: string) {\n    const done = new Set<string>([]);\n    try {\n        const okay = await testUrl(t, url, done);\n        debug(done);\n        debug(done.size);\n\n        t.true(await delay(okay));\n        return;\n    } catch (err) {\n        debug(err);\n    }\n    t.true(await delay(false));\n}\n\nasync function runUrlTestAlt(t: ExecutionContext, url: string) {\n    const done = new Set<string>([]);\n    try {\n        const okay = await testUrlAlt(t, url, done);\n        debug(done);\n        debug(done.size);\n\n        t.true(await delay(okay));\n        return;\n    } catch (err) {\n        debug(err);\n    }\n    t.true(await delay(false));\n}\n\ntest(\"OPDS2 HTTP (de)serialize roundtrip (accessibility feed)\", async (t) => {\n    const url = \"https://www.feedbooks.com/recent.json?accessibility=accessibility_fully\";\n    await runUrlTest(t, url);\n});\n\ntest(\"OPDS2 HTTP (de)serialize roundtrip (recursive) 1\", async (t) => {\n    const url = \"https://test.opds.io/2.0/home.json\";\n    // https://test.opds.io/2.0/navigation.json\n    // https://test.opds.io/2.0/publications.json\n    // https://test.opds.io/2.0/404.json\n    await runUrlTest(t, url);\n});\n\ntest(\"OPDS2 HTTP (de)serialize roundtrip (recursive) 2\", async (t) => {\n    const url = \"https://catalog.feedbooks.com/catalog/public_domain.json\";\n    // https://catalog.feedbooks.com/catalog/index.json\n    // https://catalog.feedbooks.com/book/1421.json\n    await runUrlTest(t, url);\n});\n\ntest(\"OPDS2 HTTP (de)serialize roundtrip (recursive) CATALOGS\", async (t) => {\n    const url = \"https://libraryregistry.librarysimplified.org/libraries\";\n    await runUrlTest(t, url);\n});\n\ntest(\"OPDS2 HTTP (de)serialize roundtrip (recursive) AUTHENTICATION\", async (t) => {\n    const url = \"http://acl.simplye-ca.org/CALMDA/authentication_document\";\n    await runUrlTest(t, url);\n});\n\ntest(\"OPDS1-2 HTTP convert (de)serialize roundtrip (recursive)\", async (t) => {\n    const url = \"https://bookserver.archive.org/group/openaudiobooks\";\n    await runUrlTestAlt(t, url);\n});\n\ntest(\"test\", async (t) => {\n    const url = \"https://api.archivelab.org/books/bookconcord_preface_1202/opds_audio_manifest\";\n    const done = new Set<string>([]);\n    await webpubTest(url, done);\n    debug(done);\n    debug(done.size);\n    t.true(await delay(true));\n});\n\ntest(\"OPDS1-2 LCP passphrase convert (de)serialize roundtrip\", async (t) => {\n    const xmlSrc = `\n<entry\n    xmlns=\"http://www.w3.org/2005/Atom\"\n    xmlns:lcp=\"http://readium.org/lcp-specs/ns\">\n\n    <link\n        rel=\"http://opds-spec.org/acquisition/\"\n        href=\"FAKE_URL\"\n        type=\"application/vnd.readium.lcp.license.v1.0+json\">\n\n        <lcp:hashed_passphrase>FAKE_BASE64</lcp:hashed_passphrase>\n    </link>\n</entry>\n    `;\n    const xmlDom = new xmldom.DOMParser().parseFromString(xmlSrc);\n    const isEntry = xmlDom.documentElement.localName === \"entry\";\n    t.true(isEntry);\n    const opds1Entry = XML.deserialize<Entry>(xmlDom, Entry);\n    t.is(opds1Entry.Links[0].LcpHashedPassphrase, \"FAKE_BASE64\");\n    const opds2Pub = convertOpds1ToOpds2_EntryToPublication(opds1Entry);\n    t.is(opds2Pub.Links[0].Properties.AdditionalJSON.lcp_hashed_passphrase, \"FAKE_BASE64\");\n    const opds2PubJson = TaJsonSerialize(opds2Pub);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/ban-types\n    t.is((((opds2PubJson.links as [{}])[0] as any).properties as any).lcp_hashed_passphrase as string, \"FAKE_BASE64\");\n});\n"]}
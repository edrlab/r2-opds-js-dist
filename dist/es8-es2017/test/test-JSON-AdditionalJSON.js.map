{"version":3,"file":"test-JSON-AdditionalJSON.js","sourceRoot":"","sources":["../../../test/test-JSON-AdditionalJSON.ts"],"names":[],"mappings":"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","sourcesContent":["import test from \"ava\";\n\nimport { JsonArray, JsonMap, TaJsonDeserialize, TaJsonSerialize } from \"@r2-lcp-js/serializable\";\n\nimport { initGlobalConverters_GENERIC, initGlobalConverters_OPDS } from \"../src/opds/init-globals\";\nimport { OPDSFeed } from \"../src/opds/opds2/opds2\";\nimport { OPDSMetadata } from \"../src/opds/opds2/opds2-metadata\";\nimport { checkType_Array, checkType_Number, checkType_Object, checkType_String, inspect, logJSON } from \"./helpers\";\n\ninitGlobalConverters_OPDS();\ninitGlobalConverters_GENERIC();\n\n// ==========================\n\nconst titleStr1 = \"str1\";\nconst titleStr2 = \"str2\";\nconst titleStr3 = \"str3\";\nconst n = 999;\n\n// ==========================\n\ntest(\"JSON SERIALIZE: Metadata.AdditionalJSON\", (t) => {\n    const md = new OPDSMetadata();\n    md.Title = titleStr1;\n    md.NumberOfItems = n; // OPDSMetadata\n    md.ItemsPerPage = n; // OPDSMetadata\n    md.NumberOfPages = n; // regular Metadata (root class)\n    md.AdditionalJSON = {\n        title2: titleStr2,\n        tizz: {\n            sub1: true,\n            sub2: null,\n            sub3: {\n                inner1: n,\n                inner2: [titleStr3, 888, false],\n            },\n        },\n    };\n    const pub = new OPDSFeed();\n    pub.Metadata = md;\n    inspect(pub);\n\n    const jsonPub = TaJsonSerialize(pub);\n    logJSON(jsonPub);\n    const json = jsonPub.metadata as JsonMap;\n\n    checkType_Number(t, json.numberOfItems);\n    t.is(json.numberOfItems, n);\n\n    checkType_Number(t, json.itemsPerPage);\n    t.is(json.itemsPerPage, n);\n\n    checkType_Number(t, json.numberOfPages);\n    t.is(json.numberOfPages, n);\n\n    checkType_String(t, json.title);\n    t.is(json.title, titleStr1);\n\n    if (!json.tizz) {\n        t.fail();\n        return;\n    }\n    checkType_Object(t, json.tizz);\n\n    t.is((json.tizz as JsonMap).sub1, true);\n\n    if ((json.tizz as JsonMap).sub2 || (json.tizz as JsonMap).sub2 !== null) {\n        t.fail();\n        return;\n    }\n\n    if (!(json.tizz as JsonMap).sub3) {\n        t.fail();\n        return;\n    }\n\n    checkType_Number(t, ((json.tizz as JsonMap).sub3 as JsonMap).inner1);\n    t.is(((json.tizz as JsonMap).sub3 as JsonMap).inner1, n);\n\n    if (!((json.tizz as JsonMap).sub3 as JsonMap).inner2) {\n        t.fail();\n        return;\n    }\n    checkType_Array(t, ((json.tizz as JsonMap).sub3 as JsonMap).inner2);\n    t.is((((json.tizz as JsonMap).sub3 as JsonMap).inner2 as JsonArray)[0], titleStr3);\n\n    if (!((json.tizz as JsonMap).sub3 as JsonMap).inner1) {\n        t.fail();\n        return;\n    }\n});\n\ntest(\"JSON DESERIALIZE: Metadata.AdditionalJSON\", (t) => {\n    const json: JsonMap = {\n        itemsPerPage: n,\n        numberOfItems: n,\n        numberOfPages: n,\n        title: titleStr1,\n        title2: titleStr2,\n        tizz: {\n            sub1: true,\n            sub2: null,\n            sub3: {\n                inner1: 999,\n                inner2: [titleStr3, 888, false],\n            },\n        },\n    };\n    const jsonPub: JsonMap = {\n        metadata: json,\n    };\n    logJSON(jsonPub);\n\n    const pub: OPDSFeed = TaJsonDeserialize<OPDSFeed>(jsonPub, OPDSFeed);\n    const md = pub.Metadata;\n    // const md: OPDSMetadata = TaJsonDeserialize<OPDSMetadata>(json, OPDSMetadata);\n    inspect(md);\n\n    checkType_Number(t, md.NumberOfItems); // OPDSMetadata\n    t.is(md.NumberOfItems, n);\n\n    checkType_Number(t, md.ItemsPerPage); // OPDSMetadata\n    t.is(md.ItemsPerPage, n);\n\n    checkType_Number(t, md.NumberOfPages); // regular Metadata (root class)\n    t.is(md.NumberOfPages, n);\n\n    checkType_String(t, md.Title);\n    t.is(md.Title, titleStr1);\n\n    if (!md.AdditionalJSON) {\n        t.fail();\n        return;\n    }\n\n    t.true(typeof md.AdditionalJSON.numberOfItems === \"undefined\");\n    t.true(typeof md.AdditionalJSON.itemsPerPage === \"undefined\");\n    t.true(typeof md.AdditionalJSON.numberOfPages === \"undefined\");\n\n    checkType_String(t, md.AdditionalJSON.title2);\n    t.is(md.AdditionalJSON.title2, titleStr2);\n\n    if (!md.AdditionalJSON.tizz) {\n        t.fail();\n        return;\n    }\n    checkType_Object(t, md.AdditionalJSON.tizz);\n\n    t.is((md.AdditionalJSON.tizz as JsonMap).sub1, true);\n\n    if ((md.AdditionalJSON.tizz as JsonMap).sub2 || (md.AdditionalJSON.tizz as JsonMap).sub2 !== null) {\n        t.fail();\n        return;\n    }\n\n    if (!(md.AdditionalJSON.tizz as JsonMap).sub3) {\n        t.fail();\n        return;\n    }\n\n    checkType_Number(t, ((md.AdditionalJSON.tizz as JsonMap).sub3 as JsonMap).inner1);\n    t.is(((md.AdditionalJSON.tizz as JsonMap).sub3 as JsonMap).inner1, n);\n\n    if (!((md.AdditionalJSON.tizz as JsonMap).sub3 as JsonMap).inner2) {\n        t.fail();\n        return;\n    }\n    checkType_Array(t, ((md.AdditionalJSON.tizz as JsonMap).sub3 as JsonMap).inner2);\n    t.is((((md.AdditionalJSON.tizz as JsonMap).sub3 as JsonMap).inner2 as JsonArray)[0], titleStr3);\n\n    if (!((md.AdditionalJSON.tizz as JsonMap).sub3 as JsonMap).inner1) {\n        t.fail();\n        return;\n    }\n});\n"]}
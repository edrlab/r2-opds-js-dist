{"version":3,"file":"converter.js","sourceRoot":"","sources":["../../../../src/opds/converter.ts"],"names":[],"mappings":"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","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { Metadata } from \"@r2-shared-js/models/metadata\";\nimport { BelongsTo } from \"@r2-shared-js/models/metadata-belongsto\";\nimport { Contributor } from \"@r2-shared-js/models/metadata-contributor\";\nimport { Subject } from \"@r2-shared-js/models/metadata-subject\";\nimport { Link } from \"@r2-shared-js/models/publication-link\";\n\nimport { OPDS } from \"./opds1/opds\";\nimport { Entry } from \"./opds1/opds-entry\";\nimport { Link as Opds1Link } from \"./opds1/opds-link\";\nimport { OPDSFeed } from \"./opds2/opds2\";\nimport { OPDSAvailability } from \"./opds2/opds2-availability\";\nimport { OPDSCopy } from \"./opds2/opds2-copy\";\nimport { OPDSHold } from \"./opds2/opds2-hold\";\nimport { OPDSIndirectAcquisition } from \"./opds2/opds2-indirectAcquisition\";\nimport { OPDSLink } from \"./opds2/opds2-link\";\nimport { OPDSMetadata } from \"./opds2/opds2-metadata\";\nimport { OPDSPrice } from \"./opds2/opds2-price\";\nimport { OPDSProperties } from \"./opds2/opds2-properties\";\nimport { OPDSPublication } from \"./opds2/opds2-publication\";\n\n// import { OPDSCollection } from \"./opds2/opds2-collection\";\n// import { OPDSContributor } from \"./opds2/opds2-contributor\";\n// import { OPDSPublicationMetadata } from \"./opds2/opds2-publicationMetadata\";\n\nexport const unescapeHtmlEntities = (str: string, onlyEssential: boolean | undefined = undefined): string => {\n    if (onlyEssential) {\n        return str\n            .replace(/&lt;/g, \"<\") // &#60;\n            .replace(/&amp;/g, \"&\") // &#38;\n            ;\n    }\n    return str\n        .replace(/&lt;/g, \"<\") // &#60;\n        .replace(/&gt;/g, \">\") // &#62;\n        .replace(/&quot;/g, \"\\\"\") // &#34;\n        .replace(/&#039;/g, \"'\") // &apos;\n        .replace(/&apos;/g, \"'\") // xhtml, not html\n        .replace(/&amp;/g, \"&\") // &#38;\n        ;\n};\nexport const escapeHtmlEntities = (str: string, onlyEssential: boolean | undefined = undefined): string => {\n    if (onlyEssential) {\n        return str\n            .replace(/</g, \"&lt;\") // &#60;\n            .replace(/&/g, \"&amp;\") // &#38;\n            ;\n    }\n    return str\n        .replace(/</g, \"&lt;\") // &#60;\n        .replace(/>/g, \"&gt;\") // &#62;\n        .replace(/\"/g, \"&quot;\") // &#34;\n        .replace(/'/g, \"&#039;\") // &apos;\n        // .replace(/'/g, \"&apos;\") // xhtml, not html\n        .replace(/&/g, \"&amp;\") // &#38;\n        ;\n};\nconst processTypedString = (str: string, type: string | undefined) => {\n    if (type === \"text/html\" || type === \"html\") {\n        // ALREADY UNESCAPED BY THE XPATH text() selector\n        // e.g. @XmlXPathSelector(\"atom:content/text()\")\n        return str;\n        // return unescapeHtmlEntities(str);\n    } else if (type === \"xhtml\" || type && type.indexOf(\"xhtml\") >= 0) {\n        // CHILD(REN) XML NODES ALREADY SERIALIZED (INC. NAMESPACES) BY THE XPATH text() selector\n        // e.g. @XmlXPathSelector(\"atom:content/text()\")\n        // ... BUT ONLY \"ESSENTIAL\" ESCAPED (&amp; and &lt;)\n        // PS: we patch the erroneous Atom namespace for badly-authored OPDS feeds\n        return str.replace(/http:\\/\\/www\\.w3\\.org\\/2005\\/Atom/g, \"http://www.w3.org/1999/xhtml\");\n    }\n    return str;\n};\n// https://datatracker.ietf.org/doc/html/rfc4287#page-16\nconst convertContentSummary = (entry: Entry): string | undefined => {\n\n    if (entry.Content) {\n        return processTypedString(entry.Content, entry.ContentType);\n    } else if (entry.Summary) {\n        return processTypedString(entry.Summary, entry.SummaryType);\n    }\n\n    return undefined;\n};\n\nexport function convertOpds1ToOpds2_EntryToPublication(entry: Entry): OPDSPublication {\n\n    const p = new OPDSPublication();\n    p.Metadata = new Metadata();\n\n    if (entry.Title) {\n        p.Metadata.Title = processTypedString(entry.Title, entry.TitleType);\n    }\n\n    if (entry.SubTitle) {\n        p.Metadata.SubTitle = processTypedString(entry.SubTitle, entry.SubTitleType);\n    }\n\n    if (entry.DcIdentifier) {\n        p.Metadata.Identifier = entry.DcIdentifier;\n    } else {\n        p.Metadata.Identifier = entry.Id;\n    }\n    if (entry.DcLanguage) {\n        p.Metadata.Language = [entry.DcLanguage];\n    }\n    p.Metadata.Modified = entry.Updated;\n    p.Metadata.PublicationDate = entry.Published;\n    p.Metadata.Rights = entry.DcRights;\n    if (entry.Series) {\n        entry.Series.forEach((s) => {\n            const coll = new Contributor();\n            coll.Name = s.Name;\n            coll.Position = s.Position;\n            const link = new Link();\n            link.Href = s.Url;\n            coll.Links = [];\n            coll.Links.push(link);\n\n            if (!p.Metadata.BelongsTo) {\n                p.Metadata.BelongsTo = new BelongsTo();\n            }\n            if (!p.Metadata.BelongsTo.Series) {\n                p.Metadata.BelongsTo.Series = [];\n            }\n            p.Metadata.BelongsTo.Series.push(coll);\n        });\n    }\n    if (entry.DcPublisher) {\n        const c = new Contributor();\n        c.Name = entry.DcPublisher;\n        if (!p.Metadata.Publisher) {\n            p.Metadata.Publisher = [];\n        }\n        p.Metadata.Publisher.push(c);\n    }\n\n    if (entry.Categories) {\n        entry.Categories.forEach((cat) => {\n            const subj = new Subject();\n            subj.Code = cat.Term;\n            subj.Name = cat.Label;\n            subj.Scheme = cat.Scheme;\n            if (!p.Metadata.Subject) {\n                p.Metadata.Subject = [];\n            }\n            p.Metadata.Subject.push(subj);\n        });\n    }\n    if (entry.Authors) {\n        entry.Authors.forEach((aut) => {\n\n            const cont = new Contributor();\n            cont.Name = aut.Name;\n            cont.Identifier = aut.Uri;\n            if (!p.Metadata.Author) {\n                p.Metadata.Author = [];\n            }\n            p.Metadata.Author.push(cont);\n        });\n    }\n\n    const t = convertContentSummary(entry);\n    if (t) {\n        p.Metadata.Description = t;\n    }\n\n    if (entry.Links) {\n        entry.Links.forEach((link) => {\n            const l = new OPDSLink();\n            portLinkInfo(link, l);\n\n            // tslint:disable-next-line: max-line-length\n            // https://readium.org/lcp-specs/notes/lcp-key-retrieval.html#sample-of-readium-web-publication-manifest-supporting-a-link-to-an-lcp-license-and-an-lcp_hashed_passphrase-property\n            // tslint:disable-next-line: max-line-length\n            // https://github.com/readium/lcp-specs/blob/master/notes/lcp-key-retrieval.md#sample-of-readium-web-publication-manifest-supporting-a-link-to-an-lcp-license-and-an-lcp_hashed_passphrase-property\n            if (link.LcpHashedPassphrase) {\n                if (!l.Properties) {\n                    l.Properties = new OPDSProperties();\n                }\n\n                if (!l.Properties.AdditionalJSON) {\n                    l.Properties.AdditionalJSON = {};\n                }\n                l.Properties.AdditionalJSON.lcp_hashed_passphrase = link.LcpHashedPassphrase;\n            }\n\n            if (link.OpdsIndirectAcquisitions && link.OpdsIndirectAcquisitions.length) {\n                if (!l.Properties) {\n                    l.Properties = new OPDSProperties();\n                }\n\n                link.OpdsIndirectAcquisitions.forEach((ia) => {\n                    const ind = new OPDSIndirectAcquisition();\n                    ind.TypeAcquisition = ia.OpdsIndirectAcquisitionType;\n                    if (ia.OpdsIndirectAcquisitions && ia.OpdsIndirectAcquisitions.length) {\n                        ia.OpdsIndirectAcquisitions.forEach((iac) => {\n\n                            const cia = new OPDSIndirectAcquisition();\n                            cia.TypeAcquisition = iac.OpdsIndirectAcquisitionType;\n                            if (!ind.Children) {\n                                ind.Children = [];\n                            }\n                            ind.Children.push(cia);\n                        });\n                    }\n                    if (!l.Properties.IndirectAcquisitions) {\n                        l.Properties.IndirectAcquisitions = [];\n                    }\n                    l.Properties.IndirectAcquisitions.push(ind);\n                });\n            }\n\n            if (link.OpdsPrice && link.OpdsPriceCurrencyCode) {\n                if (!l.Properties) {\n                    l.Properties = new OPDSProperties();\n                }\n                l.Properties.Price = new OPDSPrice();\n                l.Properties.Price.Currency = link.OpdsPriceCurrencyCode;\n                l.Properties.Price.Value = link.OpdsPrice;\n            }\n\n            if (link.HasRel(\"collection\") || link.HasRel(\"http://opds-spec.org/group\")) {\n                // NOOP\n            } else if (link.HasRel(\"http://opds-spec.org/image\") ||\n                link.HasRel(\"http://opds-spec.org/image/thumbnail\") ||\n\n                link.HasRel(\"http://opds-spec.org/cover\") || // incorrect OPDS1, but exists in the wild :(\n                link.HasRel(\"http://opds-spec.org/thumbnail\") || // incorrect OPDS1, but exists in the wild :(\n\n                link.HasRel(\"x-stanza-cover-image\") || // legacy Stanza\n                link.HasRel(\"x-stanza-cover-image-thumbnail\")) {\n\n                const iCoverRel = l.Rel.indexOf(\"http://opds-spec.org/cover\");\n                if (iCoverRel >= 0) {\n                    l.Rel[iCoverRel] = \"http://opds-spec.org/image\"; // fix the erroneous OPDS1 rel\n                }\n\n                const iThumbnailRel = l.Rel.indexOf(\"http://opds-spec.org/thumbnail\");\n                if (iThumbnailRel >= 0) {\n                    l.Rel[iThumbnailRel] = \"http://opds-spec.org/image/thumbnail\"; // fix the erroneous OPDS1 rel\n                }\n\n                if (!p.Images) {\n                    p.Images = [];\n                }\n                p.Images.push(l);\n            } else {\n                if (!p.Links) {\n                    p.Links = [];\n                }\n                p.Links.push(l);\n            }\n        });\n    }\n\n    return p;\n}\nexport function convertOpds1ToOpds2_EntryToLink(entry: Entry): OPDSLink {\n\n    const linkNav = new OPDSLink();\n\n    if (entry.Title) {\n        const t = processTypedString(entry.Title, entry.TitleType);\n        if (t) {\n            linkNav.Title = t;\n        }\n    }\n    if (entry.Summary) {\n        const s = processTypedString(entry.Summary, entry.SummaryType);\n        if (s) {\n            if (!linkNav.Properties) {\n                linkNav.Properties = new OPDSProperties();\n            }\n\n            if (!linkNav.Properties.AdditionalJSON) {\n                linkNav.Properties.AdditionalJSON = {};\n            }\n            linkNav.Properties.AdditionalJSON[\"http://www.w3.org/2005/Atom#summary\"] = s;\n            linkNav.Properties.AdditionalJSON.title_summary = s;\n        }\n    }\n\n    if (entry.Links) {\n        const atomLink = entry.Links.find((l) => {\n            return l.Type && l.Type.indexOf(\"application/atom+xml\") >= 0;\n        });\n        const link = atomLink ? atomLink : (entry.Links[0] ? entry.Links[0] : undefined);\n        if (link) {\n            portLinkInfo(link, linkNav);\n        }\n    }\n\n    return linkNav;\n}\n\n// https://github.com/opds-community/opds-revision\nexport function convertOpds1ToOpds2(feed: OPDS): OPDSFeed {\n    const opds2feed = new OPDSFeed();\n\n    opds2feed.Metadata = new OPDSMetadata();\n    opds2feed.Metadata.Title = feed.Title;\n    opds2feed.Metadata.Modified = feed.Updated;\n    if (feed.OpensearchTotalResults) {\n        opds2feed.Metadata.NumberOfItems = feed.OpensearchTotalResults;\n    }\n    if (feed.OpensearchItemsPerPage) {\n        opds2feed.Metadata.ItemsPerPage = feed.OpensearchItemsPerPage;\n    }\n    if (feed.Authors) {\n        feed.Authors.forEach((aut) => {\n\n            const cont = new Contributor();\n            cont.Name = aut.Name;\n            cont.Identifier = aut.Uri;\n            if (!opds2feed.Metadata.Author) {\n                opds2feed.Metadata.Author = [];\n            }\n            opds2feed.Metadata.Author.push(cont);\n        });\n    }\n    if (feed.Entries) {\n        feed.Entries.forEach((entry) => {\n            let isAnNavigation = true;\n            let thereIsAtomLink = false;\n            // let thereIsImageLink = false;\n\n            const collLink = new OPDSLink();\n\n            if (entry.Links) {\n                entry.Links.forEach((l) => {\n\n                    // the JSON Schema uri-reference validator trips on space characters, but not unicode chars\n                    if (l.Href) {\n                        l.Href = l.Href.replace(/ /g, \"%20\");\n                    }\n\n                    // fix incorrect JPEG content type\n                    if (l.Type === \"image/jpg\") {\n                        l.Type = \"image/jpeg\";\n                    }\n\n                    // if (l.HasRel(\"http://opds-spec.org/acquisition\")\n                    //     || l.HasRel(\"http://opds-spec.org/acquisition/buy\")) {\n                    if ((l.Rel && l.Rel.indexOf(\"http://opds-spec.org/acquisition\") === 0) ||\n                        (!l.Rel && l.Type === \"application/epub+zip\")) {\n                        if (!l.Rel) { // workaround for feed links with missing rel\n                            l.Rel = \"http://opds-spec.org/acquisition\";\n                        }\n                        isAnNavigation = false;\n                    }\n                    if (l.HasRel(\"collection\") || l.HasRel(\"http://opds-spec.org/group\")) {\n                        collLink.AddRel(\"collection\"); // note that existing l.Rel will not be ported to collink!\n                        portLinkInfo(l, collLink);\n                    }\n\n                    if (l.Type && l.Type.indexOf(\"application/atom+xml\") >= 0) {\n                        thereIsAtomLink = true;\n                    }\n\n                    // if (l.Type && l.Type.indexOf(\"image/\") >= 0) {\n                    //     thereIsImageLink = true;\n                    // }\n                });\n            }\n\n            const thereIsAuthor = entry.Authors && entry.Authors.length;\n\n            // no acquisition link ... let's duck-type further to infer the \"publications\" nature:\n            // thereIsImageLink cannot be used here, because some OPDS navigation feeds provide an image thumbnail\n            if (isAnNavigation && thereIsAuthor) {\n                isAnNavigation = false;\n            }\n            if (isAnNavigation && !thereIsAtomLink) {\n                isAnNavigation = false;\n            }\n\n            if (!isAnNavigation) {\n                const p = convertOpds1ToOpds2_EntryToPublication(entry);\n                if (collLink.Href) {\n                    opds2feed.AddPublicationInGroup(p, collLink);\n                } else {\n                    if (!opds2feed.Publications) {\n                        opds2feed.Publications = [];\n                    }\n                    opds2feed.Publications.push(p);\n                }\n            } else {\n                const linkNav = convertOpds1ToOpds2_EntryToLink(entry);\n                if (collLink.Href) {\n                    opds2feed.AddNavigationInGroup(linkNav, collLink);\n                } else {\n                    if (!opds2feed.Navigation) {\n                        opds2feed.Navigation = [];\n                    }\n                    opds2feed.Navigation.push(linkNav);\n                }\n            }\n        });\n    }\n\n    if (feed.Links) {\n        feed.Links.forEach((l) => {\n\n            // the JSON Schema uri-reference validator trips on space characters, but not unicode chars\n            if (l.Href) {\n                l.Href = l.Href.replace(/ /g, \"%20\");\n            }\n\n            const linkFeed = new OPDSLink();\n            portLinkInfo(l, linkFeed);\n\n            if (l.HasRel(\"http://opds-spec.org/facet\")) {\n                opds2feed.AddFacet(linkFeed, l.FacetGroup);\n            } else {\n                if (!opds2feed.Links) {\n                    opds2feed.Links = [];\n                }\n                opds2feed.Links.push(linkFeed);\n            }\n        });\n    }\n\n    return opds2feed;\n}\n\nconst portLinkInfo = (linkSource: Opds1Link, linkDest: OPDSLink) => {\n\n    if (!linkDest.Href && linkSource.Href) {\n        linkDest.Href = linkSource.Href;\n    }\n    if (!linkDest.TypeLink && linkSource.Type) {\n        linkDest.TypeLink = linkSource.Type;\n    }\n    if (!linkDest.Title && linkSource.Title) {\n        linkDest.Title = linkSource.Title;\n    }\n    if ((!linkDest.Rel || !linkDest.Rel.length) && linkSource.Rel) {\n        linkDest.AddRel(linkSource.Rel);\n    }\n\n    if (linkSource.OpdsAvailability) {\n        if (!linkDest.Properties) {\n            linkDest.Properties = new OPDSProperties();\n        }\n        linkDest.Properties.Availability = new OPDSAvailability();\n        if (linkSource.OpdsAvailability.Since) {\n            linkDest.Properties.Availability.Since = linkSource.OpdsAvailability.Since;\n        }\n        if (linkSource.OpdsAvailability.Until) {\n            linkDest.Properties.Availability.Until = linkSource.OpdsAvailability.Until;\n        }\n        if (linkSource.OpdsAvailability.State) {\n            linkDest.Properties.Availability.State = linkSource.OpdsAvailability.State;\n        } else if (linkSource.OpdsAvailability.Status) {\n            linkDest.Properties.Availability.State = linkSource.OpdsAvailability.Status;\n        }\n    }\n\n    if (linkSource.OpdsCopies) {\n        if (!linkDest.Properties) {\n            linkDest.Properties = new OPDSProperties();\n        }\n        linkDest.Properties.Copies = new OPDSCopy();\n        if (typeof linkSource.OpdsCopies.Available === \"number\") {\n            linkDest.Properties.Copies.Available = linkSource.OpdsCopies.Available;\n        }\n        if (typeof linkSource.OpdsCopies.Total === \"number\") {\n            linkDest.Properties.Copies.Total = linkSource.OpdsCopies.Total;\n        }\n    }\n\n    if (linkSource.OpdsHolds) {\n        if (!linkDest.Properties) {\n            linkDest.Properties = new OPDSProperties();\n        }\n        linkDest.Properties.Holds = new OPDSHold();\n        if (typeof linkSource.OpdsHolds.Position === \"number\") {\n            linkDest.Properties.Holds.Position = linkSource.OpdsHolds.Position;\n        }\n        if (typeof linkSource.OpdsHolds.Total === \"number\") {\n            linkDest.Properties.Holds.Total = linkSource.OpdsHolds.Total;\n        }\n    }\n\n    if (linkSource.ThrCount) {\n        if (!linkDest.Properties) {\n            linkDest.Properties = new OPDSProperties();\n        }\n        linkDest.Properties.NumberOfItems = linkSource.ThrCount;\n    }\n};\n"]}